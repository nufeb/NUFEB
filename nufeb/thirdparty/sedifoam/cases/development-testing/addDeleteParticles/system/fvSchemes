/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.4                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;

    root            "";
    case            "";
    instance        "";
    local           "";

    class           dictionary;
    object          fvSchemes;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         backward;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default         none;
    div(phia,Ua)    Gauss linearUpwind grad(Ua);
    div(phib,Ub)    Gauss linearUpwind grad(Ub);
    // div(phia,Ua)    Gauss linear;
    // div(phib,Ub)    Gauss linear;
    div(phib,k)      Gauss limitedLinear 1;
    // div(phib,epsilon) Gauss limitedLinear 1;
    div(phi,alpha)  Gauss limitedLinear01 1;
    div((-nuEffa*grad(Ua).T())) Gauss linear;
    div((-nuEffb*grad(Ub).T())) Gauss linear;
    div(((beta*nuEff)*dev2(T(grad(Ub))))) Gauss linear;
    div(betaPhib,k) Gauss linear;
}

laplacianSchemes
{
    default         none;
    laplacian(nuEffa,Ua) Gauss linear corrected;
    laplacian(nuEffb,Ub) Gauss linear corrected;
    laplacian((rho*(1|A(U))),p) Gauss linear corrected;
    laplacian(1,alpha) Gauss linear corrected;
    laplacian(DT,tempDiffScalar) Gauss linear corrected;
    laplacian(DT,tempDiffVector) Gauss linear corrected;
    laplacian((beta*nuEff),Ub) Gauss linear corrected;
    laplacian((beta*DkEff),k) Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

fluxRequired
{
    default         no;
    p;
}


// ************************************************************************* //
