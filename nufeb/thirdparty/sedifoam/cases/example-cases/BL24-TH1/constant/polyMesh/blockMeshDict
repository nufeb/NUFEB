/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.4                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;

    root            "";
    case            "";
    instance        "";
    local           "";

    class           dictionary;
    object          blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices        
(
    (0.00  0.00   0.00)
    (0.016 0.00   0.00)
    (0.016 0.00   0.008)
    (0.00  0.00   0.008)
    (0.00  0.008  0.00)
    (0.016 0.008  0.00)
    (0.016 0.008  0.008)
    (0.00  0.008  0.008)
    (0.00  0.012  0.00)
    (0.016 0.012  0.00)
    (0.016 0.012  0.008)
    (0.00  0.012  0.008)
    (0.00  0.016  0.00)
    (0.016 0.016  0.00)
    (0.016 0.016  0.008)
    (0.00  0.016  0.008)
);

blocks          
(
    hex (0 1 5 4 3 2 6 7)       (16 20 4) simpleGrading (1 0.1 1)
    hex (4 5 9 8 7 6 10 11)     (16 40 4) simpleGrading (1 1.0 1)
    hex (8 9 13 12 11 10 14 15) (16 40 4) simpleGrading (1 1.0 1)
);

edges           
(
);

boundary         
(
    bottom
    {
        type wall;
        faces
        (
            (0 1 2 3)
        );
    }

    top
    {
        type wall;
        faces
        (
            (12 13 14 15)
        );
    }

    left
    {
        type cyclic;
        neighbourPatch right;
        faces
        (
            (0 3 7 4)
            (4 7 11 8)
            (8 11 15 12)
        );
    }

    right
    {
        type cyclic;
        neighbourPatch left;
        faces
        (
            (1 2 6 5)
            (5 6 10 9)
            (9 10 14 13)
        );
    }

    front
    {
        type cyclic;
        neighbourPatch back;
        faces
        (
            (3 2 6 7)
            (7 6 10 11)
            (11 10 14 15)
        );
    }

    back
    {
        type cyclic;
        neighbourPatch front;
        faces
        (
            (0 1 5 4)
            (4 5 9 8)
            (8 9 13 12)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
