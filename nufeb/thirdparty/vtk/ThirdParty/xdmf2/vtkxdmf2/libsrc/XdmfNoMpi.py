# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.39
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_Xdmf', [dirname(__file__)])
        except ImportError:
            import _Xdmf
            return _Xdmf
        if fp is not None:
            try:
                _mod = imp.load_module('_Xdmf', fp, pathname, description)
            finally:
                fp.close()
                return _mod
    _Xdmf = swig_import_helper()
    del swig_import_helper
else:
    import _Xdmf
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


_FILE_OFFSET_BITS = _Xdmf._FILE_OFFSET_BITS
SIZEOF_LONG_LONG = _Xdmf.SIZEOF_LONG_LONG
XDMF_VERSION = _Xdmf.XDMF_VERSION
XDMF_VERSION_STRING = _Xdmf.XDMF_VERSION_STRING
XDMF_SUCCESS = _Xdmf.XDMF_SUCCESS
XDMF_FAIL = _Xdmf.XDMF_FAIL
XDMF_TRUE = _Xdmf.XDMF_TRUE
XDMF_FALSE = _Xdmf.XDMF_FALSE
XDMF_MAX_DIMENSION = _Xdmf.XDMF_MAX_DIMENSION
XDMF_MAX_STRING_LENGTH = _Xdmf.XDMF_MAX_STRING_LENGTH
XDMF_DEFAULT_INDEX = _Xdmf.XDMF_DEFAULT_INDEX
XDMF_SELECT_SLAB = _Xdmf.XDMF_SELECT_SLAB
XDMF_SELECT_INDEX = _Xdmf.XDMF_SELECT_INDEX
XDMF_UNKNOWN_TYPE = _Xdmf.XDMF_UNKNOWN_TYPE
XDMF_INT8_TYPE = _Xdmf.XDMF_INT8_TYPE
XDMF_INT16_TYPE = _Xdmf.XDMF_INT16_TYPE
XDMF_INT32_TYPE = _Xdmf.XDMF_INT32_TYPE
XDMF_INT64_TYPE = _Xdmf.XDMF_INT64_TYPE
XDMF_FLOAT32_TYPE = _Xdmf.XDMF_FLOAT32_TYPE
XDMF_FLOAT64_TYPE = _Xdmf.XDMF_FLOAT64_TYPE
XDMF_UINT8_TYPE = _Xdmf.XDMF_UINT8_TYPE
XDMF_UINT16_TYPE = _Xdmf.XDMF_UINT16_TYPE
XDMF_UINT32_TYPE = _Xdmf.XDMF_UINT32_TYPE
XDMF_COMPOUND_TYPE = _Xdmf.XDMF_COMPOUND_TYPE
class XdmfObject(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfObject, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfObject, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfObject()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfObject
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfObject_GetClassName(self)
    def SetDebug(self, *args): return _Xdmf.XdmfObject_SetDebug(self, *args)
    def GetDebug(self): return _Xdmf.XdmfObject_GetDebug(self)
    def GetGlobalDebug(self): return _Xdmf.XdmfObject_GetGlobalDebug(self)
    def SetGlobalDebug(self, *args): return _Xdmf.XdmfObject_SetGlobalDebug(self, *args)
    def DebugOn(self): return _Xdmf.XdmfObject_DebugOn(self)
    def DebugOff(self): return _Xdmf.XdmfObject_DebugOff(self)
    def GlobalDebugOn(self): return _Xdmf.XdmfObject_GlobalDebugOn(self)
    def GlobalDebugOff(self): return _Xdmf.XdmfObject_GlobalDebugOff(self)
    def GetUniqueName(self, NameBase = None): return _Xdmf.XdmfObject_GetUniqueName(self, NameBase)
XdmfObject_swigregister = _Xdmf.XdmfObject_swigregister
XdmfObject_swigregister(XdmfObject)


def SetGlobalDebugOn():
  return _Xdmf.SetGlobalDebugOn()
SetGlobalDebugOn = _Xdmf.SetGlobalDebugOn

def SetGlobalDebugOff():
  return _Xdmf.SetGlobalDebugOff()
SetGlobalDebugOff = _Xdmf.SetGlobalDebugOff

def GetGlobalDebug():
  return _Xdmf.GetGlobalDebug()
GetGlobalDebug = _Xdmf.GetGlobalDebug

def SetGlobalDebug(*args):
  return _Xdmf.SetGlobalDebug(*args)
SetGlobalDebug = _Xdmf.SetGlobalDebug

def XdmfObjectToHandle(*args):
  return _Xdmf.XdmfObjectToHandle(*args)
XdmfObjectToHandle = _Xdmf.XdmfObjectToHandle

def HandleToXdmfObject(*args):
  return _Xdmf.HandleToXdmfObject(*args)
HandleToXdmfObject = _Xdmf.HandleToXdmfObject

def VoidPointerHandleToXdmfPointer(*args):
  return _Xdmf.VoidPointerHandleToXdmfPointer(*args)
VoidPointerHandleToXdmfPointer = _Xdmf.VoidPointerHandleToXdmfPointer
class XdmfLightData(XdmfObject):
    __swig_setmethods__ = {}
    for _s in [XdmfObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfLightData, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfLightData, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfLightData()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfLightData
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfLightData_GetClassName(self)
    def SetName(self, *args): return _Xdmf.XdmfLightData_SetName(self, *args)
    def GetName(self): return _Xdmf.XdmfLightData_GetName(self)
    def SetFileName(self, *args): return _Xdmf.XdmfLightData_SetFileName(self, *args)
    def GetFileName(self): return _Xdmf.XdmfLightData_GetFileName(self)
    def SetWorkingDirectory(self, *args): return _Xdmf.XdmfLightData_SetWorkingDirectory(self, *args)
    def GetWorkingDirectory(self): return _Xdmf.XdmfLightData_GetWorkingDirectory(self)
    def GetInitialized(self): return _Xdmf.XdmfLightData_GetInitialized(self)
    def SetInitialized(self, *args): return _Xdmf.XdmfLightData_SetInitialized(self, *args)
    def GetReturnBuffer(self): return _Xdmf.XdmfLightData_GetReturnBuffer(self)
XdmfLightData_swigregister = _Xdmf.XdmfLightData_swigregister
XdmfLightData_swigregister(XdmfLightData)

def GetUnique(Pattern = None):
  return _Xdmf.GetUnique(Pattern)
GetUnique = _Xdmf.GetUnique

XDMF_ELEMENT_STATE_UNINITIALIZED = _Xdmf.XDMF_ELEMENT_STATE_UNINITIALIZED
XDMF_ELEMENT_STATE_LIGHT_PARSED = _Xdmf.XDMF_ELEMENT_STATE_LIGHT_PARSED
XDMF_ELEMENT_STATE_HEAVY_READ = _Xdmf.XDMF_ELEMENT_STATE_HEAVY_READ
class XdmfElement(XdmfLightData):
    __swig_setmethods__ = {}
    for _s in [XdmfLightData]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfElement, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfLightData]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfElement, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfElement()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfElement
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfElement_GetClassName(self)
    def SetDOM(self, *args): return _Xdmf.XdmfElement_SetDOM(self, *args)
    def GetDOM(self): return _Xdmf.XdmfElement_GetDOM(self)
    def SetState(self, *args): return _Xdmf.XdmfElement_SetState(self, *args)
    def GetState(self): return _Xdmf.XdmfElement_GetState(self)
    def SetIsReference(self, *args): return _Xdmf.XdmfElement_SetIsReference(self, *args)
    def GetIsReference(self): return _Xdmf.XdmfElement_GetIsReference(self)
    def CheckForReference(self, *args): return _Xdmf.XdmfElement_CheckForReference(self, *args)
    def InsertChildElement(self, *args): return _Xdmf.XdmfElement_InsertChildElement(self, *args)
    def Serialize(self): return _Xdmf.XdmfElement_Serialize(self)
    def SetElement(self, *args): return _Xdmf.XdmfElement_SetElement(self, *args)
    def GetElement(self): return _Xdmf.XdmfElement_GetElement(self)
    def SetCopyReferenceData(self, *args): return _Xdmf.XdmfElement_SetCopyReferenceData(self, *args)
    def GetCopyReferenceData(self): return _Xdmf.XdmfElement_GetCopyReferenceData(self)
    def GetElementName(self): return _Xdmf.XdmfElement_GetElementName(self)
    def SetElementName(self, *args): return _Xdmf.XdmfElement_SetElementName(self, *args)
    def GetDataXml(self): return _Xdmf.XdmfElement_GetDataXml(self)
    def SetDataXml(self, *args): return _Xdmf.XdmfElement_SetDataXml(self, *args)
    def GetInsertedDataXml(self): return _Xdmf.XdmfElement_GetInsertedDataXml(self)
    def SetInsertedDataXml(self, *args): return _Xdmf.XdmfElement_SetInsertedDataXml(self, *args)
    def BuildFromDataXml(self, AllowCData = 0): return _Xdmf.XdmfElement_BuildFromDataXml(self, AllowCData)
    def GetElementType(self): return _Xdmf.XdmfElement_GetElementType(self)
    def UpdateInformation(self): return _Xdmf.XdmfElement_UpdateInformation(self)
    def Update(self): return _Xdmf.XdmfElement_Update(self)
    def Build(self): return _Xdmf.XdmfElement_Build(self)
    def Set(self, *args): return _Xdmf.XdmfElement_Set(self, *args)
    def Get(self, *args): return _Xdmf.XdmfElement_Get(self, *args)
    def Copy(self, *args): return _Xdmf.XdmfElement_Copy(self, *args)
    def Insert(self, Child = None): return _Xdmf.XdmfElement_Insert(self, Child)
    def FollowReference(self, *args): return _Xdmf.XdmfElement_FollowReference(self, *args)
    def GetDsmBuffer(self): return _Xdmf.XdmfElement_GetDsmBuffer(self)
    def SetDsmBuffer(self, *args): return _Xdmf.XdmfElement_SetDsmBuffer(self, *args)
    def SetDeleteOnGridDelete(self, *args): return _Xdmf.XdmfElement_SetDeleteOnGridDelete(self, *args)
    def GetDeleteOnGridDelete(self): return _Xdmf.XdmfElement_GetDeleteOnGridDelete(self)
XdmfElement_swigregister = _Xdmf.XdmfElement_swigregister
XdmfElement_swigregister(XdmfElement)

XDMF_ATTRIBUTE_TYPE_NONE = _Xdmf.XDMF_ATTRIBUTE_TYPE_NONE
XDMF_ATTRIBUTE_TYPE_SCALAR = _Xdmf.XDMF_ATTRIBUTE_TYPE_SCALAR
XDMF_ATTRIBUTE_TYPE_VECTOR = _Xdmf.XDMF_ATTRIBUTE_TYPE_VECTOR
XDMF_ATTRIBUTE_TYPE_TENSOR = _Xdmf.XDMF_ATTRIBUTE_TYPE_TENSOR
XDMF_ATTRIBUTE_TYPE_MATRIX = _Xdmf.XDMF_ATTRIBUTE_TYPE_MATRIX
XDMF_ATTRIBUTE_TYPE_TENSOR6 = _Xdmf.XDMF_ATTRIBUTE_TYPE_TENSOR6
XDMF_ATTRIBUTE_TYPE_GLOBALID = _Xdmf.XDMF_ATTRIBUTE_TYPE_GLOBALID
XDMF_ATTRIBUTE_CENTER_GRID = _Xdmf.XDMF_ATTRIBUTE_CENTER_GRID
XDMF_ATTRIBUTE_CENTER_CELL = _Xdmf.XDMF_ATTRIBUTE_CENTER_CELL
XDMF_ATTRIBUTE_CENTER_FACE = _Xdmf.XDMF_ATTRIBUTE_CENTER_FACE
XDMF_ATTRIBUTE_CENTER_EDGE = _Xdmf.XDMF_ATTRIBUTE_CENTER_EDGE
XDMF_ATTRIBUTE_CENTER_NODE = _Xdmf.XDMF_ATTRIBUTE_CENTER_NODE
class XdmfAttribute(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfAttribute, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfAttribute, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfAttribute()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfAttribute
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfAttribute_GetClassName(self)
    def SetAttributeType(self, *args): return _Xdmf.XdmfAttribute_SetAttributeType(self, *args)
    def GetAttributeType(self): return _Xdmf.XdmfAttribute_GetAttributeType(self)
    def SetLightDataLimit(self, *args): return _Xdmf.XdmfAttribute_SetLightDataLimit(self, *args)
    def GetLightDataLimit(self): return _Xdmf.XdmfAttribute_GetLightDataLimit(self)
    def SetActive(self, *args): return _Xdmf.XdmfAttribute_SetActive(self, *args)
    def GetActive(self): return _Xdmf.XdmfAttribute_GetActive(self)
    def Insert(self, *args): return _Xdmf.XdmfAttribute_Insert(self, *args)
    def SetAttributeTypeFromString(self, *args): return _Xdmf.XdmfAttribute_SetAttributeTypeFromString(self, *args)
    def GetAttributeTypeAsString(self): return _Xdmf.XdmfAttribute_GetAttributeTypeAsString(self)
    def SetAttributeCenterFromString(self, *args): return _Xdmf.XdmfAttribute_SetAttributeCenterFromString(self, *args)
    def GetAttributeCenterAsString(self): return _Xdmf.XdmfAttribute_GetAttributeCenterAsString(self)
    def SetAttributeCenter(self, *args): return _Xdmf.XdmfAttribute_SetAttributeCenter(self, *args)
    def GetAttributeCenter(self): return _Xdmf.XdmfAttribute_GetAttributeCenter(self)
    def GetUnits(self): return _Xdmf.XdmfAttribute_GetUnits(self)
    def SetUnits(self, *args): return _Xdmf.XdmfAttribute_SetUnits(self, *args)
    def GetShapeDesc(self): return _Xdmf.XdmfAttribute_GetShapeDesc(self)
    def SetValues(self, *args): return _Xdmf.XdmfAttribute_SetValues(self, *args)
    def GetValues(self, Create = 1): return _Xdmf.XdmfAttribute_GetValues(self, Create)
    def UpdateInformation(self): return _Xdmf.XdmfAttribute_UpdateInformation(self)
    def Update(self): return _Xdmf.XdmfAttribute_Update(self)
    def Build(self): return _Xdmf.XdmfAttribute_Build(self)
    def Release(self): return _Xdmf.XdmfAttribute_Release(self)
XdmfAttribute_swigregister = _Xdmf.XdmfAttribute_swigregister
XdmfAttribute_swigregister(XdmfAttribute)


def XdmfTypeToHDF5Type(*args):
  return _Xdmf.XdmfTypeToHDF5Type(*args)
XdmfTypeToHDF5Type = _Xdmf.XdmfTypeToHDF5Type

def HDF5TypeToXdmfType(*args):
  return _Xdmf.HDF5TypeToXdmfType(*args)
HDF5TypeToXdmfType = _Xdmf.HDF5TypeToXdmfType

def XdmfTypeToString(*args):
  return _Xdmf.XdmfTypeToString(*args)
XdmfTypeToString = _Xdmf.XdmfTypeToString

def StringToXdmfType(*args):
  return _Xdmf.StringToXdmfType(*args)
StringToXdmfType = _Xdmf.StringToXdmfType

def XdmfTypeToClassString(*args):
  return _Xdmf.XdmfTypeToClassString(*args)
XdmfTypeToClassString = _Xdmf.XdmfTypeToClassString
XDMF_SELECTALL = _Xdmf.XDMF_SELECTALL
XDMF_HYPERSLAB = _Xdmf.XDMF_HYPERSLAB
XDMF_COORDINATES = _Xdmf.XDMF_COORDINATES
class XdmfDataDesc(XdmfObject):
    __swig_setmethods__ = {}
    for _s in [XdmfObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDataDesc, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDataDesc, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfDataDesc()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfDataDesc
    __del__ = lambda self : None;
    def Print(self): return _Xdmf.XdmfDataDesc_Print(self)
    def SetNumberType(self, *args): return _Xdmf.XdmfDataDesc_SetNumberType(self, *args)
    def SetNumberTypeFromString(self, *args): return _Xdmf.XdmfDataDesc_SetNumberTypeFromString(self, *args)
    def GetNumberType(self): return _Xdmf.XdmfDataDesc_GetNumberType(self)
    def GetNumberTypeAsString(self): return _Xdmf.XdmfDataDesc_GetNumberTypeAsString(self)
    def SetShape(self, *args): return _Xdmf.XdmfDataDesc_SetShape(self, *args)
    def GetShape(self, *args): return _Xdmf.XdmfDataDesc_GetShape(self, *args)
    def GetShapeAsString(self): return _Xdmf.XdmfDataDesc_GetShapeAsString(self)
    def CopySelection(self, *args): return _Xdmf.XdmfDataDesc_CopySelection(self, *args)
    def CopyShape(self, *args): return _Xdmf.XdmfDataDesc_CopyShape(self, *args)
    def CopyType(self, *args): return _Xdmf.XdmfDataDesc_CopyType(self, *args)
    def SetNumberOfElements(self, *args): return _Xdmf.XdmfDataDesc_SetNumberOfElements(self, *args)
    def SetShapeFromString(self, *args): return _Xdmf.XdmfDataDesc_SetShapeFromString(self, *args)
    def SelectAll(self): return _Xdmf.XdmfDataDesc_SelectAll(self)
    def SelectHyperSlab(self, *args): return _Xdmf.XdmfDataDesc_SelectHyperSlab(self, *args)
    def SelectHyperSlabFromString(self, *args): return _Xdmf.XdmfDataDesc_SelectHyperSlabFromString(self, *args)
    def GetHyperSlab(self, *args): return _Xdmf.XdmfDataDesc_GetHyperSlab(self, *args)
    def GetHyperSlabAsString(self): return _Xdmf.XdmfDataDesc_GetHyperSlabAsString(self)
    def SelectCoordinates(self, *args): return _Xdmf.XdmfDataDesc_SelectCoordinates(self, *args)
    def SelectCoordinatesFromString(self, *args): return _Xdmf.XdmfDataDesc_SelectCoordinatesFromString(self, *args)
    def GetCoordinates(self, Start = 0, Nelements = 0): return _Xdmf.XdmfDataDesc_GetCoordinates(self, Start, Nelements)
    def GetCoordinatesAsString(self, Start = 0, Nelements = 0): return _Xdmf.XdmfDataDesc_GetCoordinatesAsString(self, Start, Nelements)
    def GetSelectionSize(self): return _Xdmf.XdmfDataDesc_GetSelectionSize(self)
    def GetNumberOfElements(self): return _Xdmf.XdmfDataDesc_GetNumberOfElements(self)
    def GetCompression(self): return _Xdmf.XdmfDataDesc_GetCompression(self)
    def SetCompression(self, *args): return _Xdmf.XdmfDataDesc_SetCompression(self, *args)
    def GetRank(self): return _Xdmf.XdmfDataDesc_GetRank(self)
    def GetDimension(self, *args): return _Xdmf.XdmfDataDesc_GetDimension(self, *args)
    def GetStart(self, *args): return _Xdmf.XdmfDataDesc_GetStart(self, *args)
    def GetStride(self, *args): return _Xdmf.XdmfDataDesc_GetStride(self, *args)
    def GetCount(self, *args): return _Xdmf.XdmfDataDesc_GetCount(self, *args)
    def GetSelectionType(self): return _Xdmf.XdmfDataDesc_GetSelectionType(self)
    def GetSelectionTypeAsString(self): return _Xdmf.XdmfDataDesc_GetSelectionTypeAsString(self)
    def GetDataType(self): return _Xdmf.XdmfDataDesc_GetDataType(self)
    def GetDataSpace(self): return _Xdmf.XdmfDataDesc_GetDataSpace(self)
    def GetElementSize(self): return _Xdmf.XdmfDataDesc_GetElementSize(self)
    def AddCompoundMemberFromString(self, *args): return _Xdmf.XdmfDataDesc_AddCompoundMemberFromString(self, *args)
    def GetNumberOfMembers(self): return _Xdmf.XdmfDataDesc_GetNumberOfMembers(self)
    def GetMemberName(self, *args): return _Xdmf.XdmfDataDesc_GetMemberName(self, *args)
    def GetMemberLength(self, *args): return _Xdmf.XdmfDataDesc_GetMemberLength(self, *args)
    def GetMemberSize(self, *args): return _Xdmf.XdmfDataDesc_GetMemberSize(self, *args)
    def GetMemberShape(self, *args): return _Xdmf.XdmfDataDesc_GetMemberShape(self, *args)
    def GetMemberShapeAsString(self, *args): return _Xdmf.XdmfDataDesc_GetMemberShapeAsString(self, *args)
    def GetMemberType(self, *args): return _Xdmf.XdmfDataDesc_GetMemberType(self, *args)
    def GetMemberTypeAsString(self, *args): return _Xdmf.XdmfDataDesc_GetMemberTypeAsString(self, *args)
    def GetMemberOffset(self, *args): return _Xdmf.XdmfDataDesc_GetMemberOffset(self, *args)
    def SetHeavyDataSetName(self, *args): return _Xdmf.XdmfDataDesc_SetHeavyDataSetName(self, *args)
    def GetHeavyDataSetName(self): return _Xdmf.XdmfDataDesc_GetHeavyDataSetName(self)
    def GetDsmBuffer(self): return _Xdmf.XdmfDataDesc_GetDsmBuffer(self)
    def SetDsmBuffer(self, *args): return _Xdmf.XdmfDataDesc_SetDsmBuffer(self, *args)
XdmfDataDesc_swigregister = _Xdmf.XdmfDataDesc_swigregister
XdmfDataDesc_swigregister(XdmfDataDesc)

XDMF_ARRAY_TAG_LENGTH = _Xdmf.XDMF_ARRAY_TAG_LENGTH
class XdmfArray(XdmfDataDesc):
    __swig_setmethods__ = {}
    for _s in [XdmfDataDesc]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfArray, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfDataDesc]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfArray, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfArray()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfArray
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfArray_GetClassName(self)
    def GetTagName(self): return _Xdmf.XdmfArray_GetTagName(self)
    def GetCoreLength(self): return _Xdmf.XdmfArray_GetCoreLength(self)
    def Allocate(self): return _Xdmf.XdmfArray_Allocate(self)
    def SetAllowAllocate(self, *args): return _Xdmf.XdmfArray_SetAllowAllocate(self, *args)
    def GetAllowAllocate(self): return _Xdmf.XdmfArray_GetAllowAllocate(self)
    def SetShape(self, *args): return _Xdmf.XdmfArray_SetShape(self, *args)
    def SetShapeFromString(self, *args): return _Xdmf.XdmfArray_SetShapeFromString(self, *args)
    def SetShapeFromSelection(self, *args): return _Xdmf.XdmfArray_SetShapeFromSelection(self, *args)
    def SetNumberOfElements(self, *args): return _Xdmf.XdmfArray_SetNumberOfElements(self, *args)
    def ReformFromString(self, *args): return _Xdmf.XdmfArray_ReformFromString(self, *args)
    def ReformFromSelection(self, *args): return _Xdmf.XdmfArray_ReformFromSelection(self, *args)
    def CopyShape(self, *args): return _Xdmf.XdmfArray_CopyShape(self, *args)
    def GetDataPointer(self, Index = 0): return _Xdmf.XdmfArray_GetDataPointer(self, Index)
    def SetDataPointer(self, *args): return _Xdmf.XdmfArray_SetDataPointer(self, *args)
    def Reset(self, Free = 0): return _Xdmf.XdmfArray_Reset(self, Free)
    def SetValueFromFloat64(self, *args): return _Xdmf.XdmfArray_SetValueFromFloat64(self, *args)
    def SetValueFromInt64(self, *args): return _Xdmf.XdmfArray_SetValueFromInt64(self, *args)
    def SetValues(self, *args): return _Xdmf.XdmfArray_SetValues(self, *args)
    def GetValuesAsInt8(self, *args): return _Xdmf.XdmfArray_GetValuesAsInt8(self, *args)
    def SetValuesFromInt8(self, *args): return _Xdmf.XdmfArray_SetValuesFromInt8(self, *args)
    def GetValuesAsInt32(self, *args): return _Xdmf.XdmfArray_GetValuesAsInt32(self, *args)
    def SetValuesFromInt32(self, *args): return _Xdmf.XdmfArray_SetValuesFromInt32(self, *args)
    def GetValuesAsInt64(self, *args): return _Xdmf.XdmfArray_GetValuesAsInt64(self, *args)
    def SetValuesFromInt64(self, *args): return _Xdmf.XdmfArray_SetValuesFromInt64(self, *args)
    def GetValuesAsFloat32(self, *args): return _Xdmf.XdmfArray_GetValuesAsFloat32(self, *args)
    def SetValuesFromFloat32(self, *args): return _Xdmf.XdmfArray_SetValuesFromFloat32(self, *args)
    def GetValuesAsFloat64(self, *args): return _Xdmf.XdmfArray_GetValuesAsFloat64(self, *args)
    def SetValuesFromFloat64(self, *args): return _Xdmf.XdmfArray_SetValuesFromFloat64(self, *args)
    def GetValueAsFloat64(self, *args): return _Xdmf.XdmfArray_GetValueAsFloat64(self, *args)
    def GetValueAsFloat32(self, *args): return _Xdmf.XdmfArray_GetValueAsFloat32(self, *args)
    def GetValueAsInt64(self, *args): return _Xdmf.XdmfArray_GetValueAsInt64(self, *args)
    def GetValueAsInt32(self, *args): return _Xdmf.XdmfArray_GetValueAsInt32(self, *args)
    def GetValueAsInt16(self, *args): return _Xdmf.XdmfArray_GetValueAsInt16(self, *args)
    def GetValueAsInt8(self, *args): return _Xdmf.XdmfArray_GetValueAsInt8(self, *args)
    def GetValues(self, Index = 0, NumberOfValues = 0, ArrayStride = 1): return _Xdmf.XdmfArray_GetValues(self, Index, NumberOfValues, ArrayStride)
    def Generate(self, *args): return _Xdmf.XdmfArray_Generate(self, *args)
    def Clone(self, Start = 0, End = 0): return _Xdmf.XdmfArray_Clone(self, Start, End)
    def Reference(self, Start = 0, End = 0): return _Xdmf.XdmfArray_Reference(self, Start, End)
    def GetMaxAsFloat64(self): return _Xdmf.XdmfArray_GetMaxAsFloat64(self)
    def GetMinAsFloat64(self): return _Xdmf.XdmfArray_GetMinAsFloat64(self)
    def GetMaxAsInt64(self): return _Xdmf.XdmfArray_GetMaxAsInt64(self)
    def GetMinAsInt64(self): return _Xdmf.XdmfArray_GetMinAsInt64(self)
    def GetMean(self): return _Xdmf.XdmfArray_GetMean(self)
    def SetDataFromChars(self, *args): return _Xdmf.XdmfArray_SetDataFromChars(self, *args)
    def GetDataPointerAsCharPointer(self): return _Xdmf.XdmfArray_GetDataPointerAsCharPointer(self)
XdmfArray_swigregister = _Xdmf.XdmfArray_swigregister
XdmfArray_swigregister(XdmfArray)

class XdmfArrayList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfArrayList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfArrayList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["name"] = _Xdmf.XdmfArrayList_name_set
    __swig_getmethods__["name"] = _Xdmf.XdmfArrayList_name_get
    if _newclass:name = _swig_property(_Xdmf.XdmfArrayList_name_get, _Xdmf.XdmfArrayList_name_set)
    __swig_setmethods__["timecntr"] = _Xdmf.XdmfArrayList_timecntr_set
    __swig_getmethods__["timecntr"] = _Xdmf.XdmfArrayList_timecntr_get
    if _newclass:timecntr = _swig_property(_Xdmf.XdmfArrayList_timecntr_get, _Xdmf.XdmfArrayList_timecntr_set)
    __swig_setmethods__["Array"] = _Xdmf.XdmfArrayList_Array_set
    __swig_getmethods__["Array"] = _Xdmf.XdmfArrayList_Array_get
    if _newclass:Array = _swig_property(_Xdmf.XdmfArrayList_Array_get, _Xdmf.XdmfArrayList_Array_set)
    def __init__(self): 
        this = _Xdmf.new_XdmfArrayList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfArrayList
    __del__ = lambda self : None;
XdmfArrayList_swigregister = _Xdmf.XdmfArrayList_swigregister
XdmfArrayList_swigregister(XdmfArrayList)


def TagNameToArray(*args):
  return _Xdmf.TagNameToArray(*args)
TagNameToArray = _Xdmf.TagNameToArray

def PrintAllXdmfArrays():
  return _Xdmf.PrintAllXdmfArrays()
PrintAllXdmfArrays = _Xdmf.PrintAllXdmfArrays

def GetCurrentArrayTime():
  return _Xdmf.GetCurrentArrayTime()
GetCurrentArrayTime = _Xdmf.GetCurrentArrayTime
class XdmfDOM(XdmfLightData):
    __swig_setmethods__ = {}
    for _s in [XdmfLightData]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDOM, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfLightData]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDOM, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfDOM()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfDOM
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfDOM_GetClassName(self)
    def SetInputFileName(self, *args): return _Xdmf.XdmfDOM_SetInputFileName(self, *args)
    def SetOutputFileName(self, *args): return _Xdmf.XdmfDOM_SetOutputFileName(self, *args)
    def GetInputFileName(self): return _Xdmf.XdmfDOM_GetInputFileName(self)
    def GetOutputFileName(self): return _Xdmf.XdmfDOM_GetOutputFileName(self)
    def SetParserOptions(self, *args): return _Xdmf.XdmfDOM_SetParserOptions(self, *args)
    def GetOutput(self): return _Xdmf.XdmfDOM_GetOutput(self)
    def SetOutput(self, *args): return _Xdmf.XdmfDOM_SetOutput(self, *args)
    def GetInput(self): return _Xdmf.XdmfDOM_GetInput(self)
    def SetInput(self, *args): return _Xdmf.XdmfDOM_SetInput(self, *args)
    def GenerateHead(self): return _Xdmf.XdmfDOM_GenerateHead(self)
    def GetDTD(self): return _Xdmf.XdmfDOM_GetDTD(self)
    def SetDTD(self, *args): return _Xdmf.XdmfDOM_SetDTD(self, *args)
    def Puts(self, *args): return _Xdmf.XdmfDOM_Puts(self, *args)
    def GenerateTail(self): return _Xdmf.XdmfDOM_GenerateTail(self)
    def GetTree(self): return _Xdmf.XdmfDOM_GetTree(self)
    def __Parse(self, *args): return _Xdmf.XdmfDOM___Parse(self, *args)
    def Parse(self, xml = None): return _Xdmf.XdmfDOM_Parse(self, xml)
    def GetRoot(self): return _Xdmf.XdmfDOM_GetRoot(self)
    def GetNumberOfChildren(self, node = None): return _Xdmf.XdmfDOM_GetNumberOfChildren(self, node)
    def GetChild(self, *args): return _Xdmf.XdmfDOM_GetChild(self, *args)
    def GetNumberOfAttributes(self, *args): return _Xdmf.XdmfDOM_GetNumberOfAttributes(self, *args)
    def GetAttributeName(self, *args): return _Xdmf.XdmfDOM_GetAttributeName(self, *args)
    def IsChild(self, *args): return _Xdmf.XdmfDOM_IsChild(self, *args)
    def Serialize(self, node = None): return _Xdmf.XdmfDOM_Serialize(self, node)
    def Write(self, Output = None): return _Xdmf.XdmfDOM_Write(self, Output)
    def Insert(self, *args): return _Xdmf.XdmfDOM_Insert(self, *args)
    def InsertFromString(self, *args): return _Xdmf.XdmfDOM_InsertFromString(self, *args)
    def Create(self, RootElementName = "Xdmf", Version = "2.0"): return _Xdmf.XdmfDOM_Create(self, RootElementName, Version)
    def InsertNew(self, *args): return _Xdmf.XdmfDOM_InsertNew(self, *args)
    def DeleteNode(self, *args): return _Xdmf.XdmfDOM_DeleteNode(self, *args)
    def FindElement(self, *args): return _Xdmf.XdmfDOM_FindElement(self, *args)
    def FindNextElement(self, *args): return _Xdmf.XdmfDOM_FindNextElement(self, *args)
    def FindDataElement(self, Index = 0, Node = None, IgnoreInfo = 1): return _Xdmf.XdmfDOM_FindDataElement(self, Index, Node, IgnoreInfo)
    def FindElementByAttribute(self, *args): return _Xdmf.XdmfDOM_FindElementByAttribute(self, *args)
    def FindElementByPath(self, *args): return _Xdmf.XdmfDOM_FindElementByPath(self, *args)
    def FindNumberOfElements(self, *args): return _Xdmf.XdmfDOM_FindNumberOfElements(self, *args)
    def FindNumberOfElementsByAttribute(self, *args): return _Xdmf.XdmfDOM_FindNumberOfElementsByAttribute(self, *args)
    def GetPath(self, *args): return _Xdmf.XdmfDOM_GetPath(self, *args)
    def GetNdgmHost(self): return _Xdmf.XdmfDOM_GetNdgmHost(self)
    def SetNdgmHost(self, *args): return _Xdmf.XdmfDOM_SetNdgmHost(self, *args)
    def Get(self, *args): return _Xdmf.XdmfDOM_Get(self, *args)
    def GetAttribute(self, *args): return _Xdmf.XdmfDOM_GetAttribute(self, *args)
    def GetCData(self, *args): return _Xdmf.XdmfDOM_GetCData(self, *args)
    def Set(self, *args): return _Xdmf.XdmfDOM_Set(self, *args)
XdmfDOM_swigregister = _Xdmf.XdmfDOM_swigregister
XdmfDOM_swigregister(XdmfDOM)

def GetNextOlderArray(*args):
  return _Xdmf.GetNextOlderArray(*args)
GetNextOlderArray = _Xdmf.GetNextOlderArray


def HandleToXdmfDOM(*args):
  return _Xdmf.HandleToXdmfDOM(*args)
HandleToXdmfDOM = _Xdmf.HandleToXdmfDOM
class XdmfInformation(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfInformation, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfInformation, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfInformation()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfInformation
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfInformation_GetClassName(self)
    def Insert(self, *args): return _Xdmf.XdmfInformation_Insert(self, *args)
    def UpdateInformation(self): return _Xdmf.XdmfInformation_UpdateInformation(self)
    def SetValue(self, *args): return _Xdmf.XdmfInformation_SetValue(self, *args)
    def Build(self): return _Xdmf.XdmfInformation_Build(self)
    def GetValue(self): return _Xdmf.XdmfInformation_GetValue(self)
XdmfInformation_swigregister = _Xdmf.XdmfInformation_swigregister
XdmfInformation_swigregister(XdmfInformation)

XDMF_FORMAT_XML = _Xdmf.XDMF_FORMAT_XML
XDMF_FORMAT_HDF = _Xdmf.XDMF_FORMAT_HDF
XDMF_FORMAT_MYSQL = _Xdmf.XDMF_FORMAT_MYSQL
XDMF_FORMAT_BINARY = _Xdmf.XDMF_FORMAT_BINARY
XDMF_ITEM_UNIFORM = _Xdmf.XDMF_ITEM_UNIFORM
XDMF_ITEM_HYPERSLAB = _Xdmf.XDMF_ITEM_HYPERSLAB
XDMF_ITEM_COORDINATES = _Xdmf.XDMF_ITEM_COORDINATES
XDMF_ITEM_FUNCTION = _Xdmf.XDMF_ITEM_FUNCTION
XDMF_ITEM_COLLECTION = _Xdmf.XDMF_ITEM_COLLECTION
XDMF_ITEM_TREE = _Xdmf.XDMF_ITEM_TREE
XDMF_ITEM_MASK = _Xdmf.XDMF_ITEM_MASK
class XdmfDataItem(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDataItem, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDataItem, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfDataItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfDataItem
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfDataItem_GetClassName(self)
    def GetValues(self): return _Xdmf.XdmfDataItem_GetValues(self)
    def GetFormat(self): return _Xdmf.XdmfDataItem_GetFormat(self)
    def SetFormat(self, *args): return _Xdmf.XdmfDataItem_SetFormat(self, *args)
    def Insert(self, *args): return _Xdmf.XdmfDataItem_Insert(self, *args)
    def SetArrayIsMine(self, *args): return _Xdmf.XdmfDataItem_SetArrayIsMine(self, *args)
    def GetArrayIsMine(self): return _Xdmf.XdmfDataItem_GetArrayIsMine(self)
    def UpdateInformation(self): return _Xdmf.XdmfDataItem_UpdateInformation(self)
    def Update(self): return _Xdmf.XdmfDataItem_Update(self)
    def Build(self): return _Xdmf.XdmfDataItem_Build(self)
    def GetDataDesc(self): return _Xdmf.XdmfDataItem_GetDataDesc(self)
    def SetDataDesc(self, *args): return _Xdmf.XdmfDataItem_SetDataDesc(self, *args)
    def GetArray(self, Create = 1): return _Xdmf.XdmfDataItem_GetArray(self, Create)
    def SetArray(self, *args): return _Xdmf.XdmfDataItem_SetArray(self, *args)
    def GetDataValues(self, Index = 0, NumberOfValues = 0, ArrayStride = 1): return _Xdmf.XdmfDataItem_GetDataValues(self, Index, NumberOfValues, ArrayStride)
    def SetDataValues(self, *args): return _Xdmf.XdmfDataItem_SetDataValues(self, *args)
    def GetRank(self): return _Xdmf.XdmfDataItem_GetRank(self)
    def SetShape(self, *args): return _Xdmf.XdmfDataItem_SetShape(self, *args)
    def GetShape(self, *args): return _Xdmf.XdmfDataItem_GetShape(self, *args)
    def GetShapeAsString(self): return _Xdmf.XdmfDataItem_GetShapeAsString(self)
    def GetDimensions(self): return _Xdmf.XdmfDataItem_GetDimensions(self)
    def SetDimensions(self, *args): return _Xdmf.XdmfDataItem_SetDimensions(self, *args)
    def SetDimensionsFromString(self, *args): return _Xdmf.XdmfDataItem_SetDimensionsFromString(self, *args)
    def SetHeavyDataSetName(self, *args): return _Xdmf.XdmfDataItem_SetHeavyDataSetName(self, *args)
    def GetHeavyDataSetName(self): return _Xdmf.XdmfDataItem_GetHeavyDataSetName(self)
    def Copy(self, *args): return _Xdmf.XdmfDataItem_Copy(self, *args)
    def SetItemType(self, *args): return _Xdmf.XdmfDataItem_SetItemType(self, *args)
    def GetItemType(self): return _Xdmf.XdmfDataItem_GetItemType(self)
    def GetIsMultiple(self): return _Xdmf.XdmfDataItem_GetIsMultiple(self)
    def SetFunction(self, *args): return _Xdmf.XdmfDataItem_SetFunction(self, *args)
    def GetFunction(self): return _Xdmf.XdmfDataItem_GetFunction(self)
    def Release(self): return _Xdmf.XdmfDataItem_Release(self)
    def GetColumnMajor(self): return _Xdmf.XdmfDataItem_GetColumnMajor(self)
    def SetColumnMajor(self, *args): return _Xdmf.XdmfDataItem_SetColumnMajor(self, *args)
    def GetTransposeInMemory(self): return _Xdmf.XdmfDataItem_GetTransposeInMemory(self)
    def SetTransposeInMemory(self, *args): return _Xdmf.XdmfDataItem_SetTransposeInMemory(self, *args)
XdmfDataItem_swigregister = _Xdmf.XdmfDataItem_swigregister
XdmfDataItem_swigregister(XdmfDataItem)

class XdmfDataStructure(XdmfDataItem):
    __swig_setmethods__ = {}
    for _s in [XdmfDataItem]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDataStructure, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfDataItem]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDataStructure, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfDataStructure()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfDataStructure
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfDataStructure_GetClassName(self)
    def UpdateInformation(self): return _Xdmf.XdmfDataStructure_UpdateInformation(self)
XdmfDataStructure_swigregister = _Xdmf.XdmfDataStructure_swigregister
XdmfDataStructure_swigregister(XdmfDataStructure)

class XdmfValues(XdmfDataItem):
    __swig_setmethods__ = {}
    for _s in [XdmfDataItem]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfValues, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfDataItem]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfValues, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfValues()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfValues
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfValues_GetClassName(self)
    def Inherit(self, *args): return _Xdmf.XdmfValues_Inherit(self, *args)
    def Read(self, Array = None): return _Xdmf.XdmfValues_Read(self, Array)
    def Write(self, *args): return _Xdmf.XdmfValues_Write(self, *args)
XdmfValues_swigregister = _Xdmf.XdmfValues_swigregister
XdmfValues_swigregister(XdmfValues)

class XdmfValuesXML(XdmfValues):
    __swig_setmethods__ = {}
    for _s in [XdmfValues]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfValuesXML, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfValues]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfValuesXML, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfValuesXML()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfValuesXML
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfValuesXML_GetClassName(self)
    def Read(self, Array = None): return _Xdmf.XdmfValuesXML_Read(self, Array)
    def Write(self, *args): return _Xdmf.XdmfValuesXML_Write(self, *args)
XdmfValuesXML_swigregister = _Xdmf.XdmfValuesXML_swigregister
XdmfValuesXML_swigregister(XdmfValuesXML)

class XdmfValuesHDF(XdmfValues):
    __swig_setmethods__ = {}
    for _s in [XdmfValues]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfValuesHDF, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfValues]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfValuesHDF, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfValuesHDF()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfValuesHDF
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfValuesHDF_GetClassName(self)
    def Read(self, Array = None): return _Xdmf.XdmfValuesHDF_Read(self, Array)
    def Write(self, *args): return _Xdmf.XdmfValuesHDF_Write(self, *args)
    def DataItemFromHDF(self, *args): return _Xdmf.XdmfValuesHDF_DataItemFromHDF(self, *args)
XdmfValuesHDF_swigregister = _Xdmf.XdmfValuesHDF_swigregister
XdmfValuesHDF_swigregister(XdmfValuesHDF)


def XdmfArrayExpr(*args):
  return _Xdmf.XdmfArrayExpr(*args)
XdmfArrayExpr = _Xdmf.XdmfArrayExpr

def XdmfScalarExpr(*args):
  return _Xdmf.XdmfScalarExpr(*args)
XdmfScalarExpr = _Xdmf.XdmfScalarExpr

def XdmfExpr(*args):
  return _Xdmf.XdmfExpr(*args)
XdmfExpr = _Xdmf.XdmfExpr
class XdmfHeavyData(XdmfDataDesc):
    __swig_setmethods__ = {}
    for _s in [XdmfDataDesc]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfHeavyData, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfDataDesc]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfHeavyData, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfHeavyData()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfHeavyData
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfHeavyData_GetClassName(self)
    def GetNdgmHost(self): return _Xdmf.XdmfHeavyData_GetNdgmHost(self)
    def SetNdgmHost(self, *args): return _Xdmf.XdmfHeavyData_SetNdgmHost(self, *args)
    def GetWorkingDirectory(self): return _Xdmf.XdmfHeavyData_GetWorkingDirectory(self)
    def SetWorkingDirectory(self, *args): return _Xdmf.XdmfHeavyData_SetWorkingDirectory(self, *args)
    def GetDomain(self): return _Xdmf.XdmfHeavyData_GetDomain(self)
    def SetDomain(self, *args): return _Xdmf.XdmfHeavyData_SetDomain(self, *args)
    def GetFileName(self): return _Xdmf.XdmfHeavyData_GetFileName(self)
    def SetFileName(self, *args): return _Xdmf.XdmfHeavyData_SetFileName(self, *args)
    def GetPath(self): return _Xdmf.XdmfHeavyData_GetPath(self)
    def SetPath(self, *args): return _Xdmf.XdmfHeavyData_SetPath(self, *args)
    def GetAccess(self): return _Xdmf.XdmfHeavyData_GetAccess(self)
    def SetAccess(self, *args): return _Xdmf.XdmfHeavyData_SetAccess(self, *args)
    def Open(self, name = None, access = None): return _Xdmf.XdmfHeavyData_Open(self, name, access)
    def Read(self, array = None): return _Xdmf.XdmfHeavyData_Read(self, array)
    def Write(self, *args): return _Xdmf.XdmfHeavyData_Write(self, *args)
    def Close(self): return _Xdmf.XdmfHeavyData_Close(self)
    def DoOpen(self, *args): return _Xdmf.XdmfHeavyData_DoOpen(self, *args)
    def DoRead(self, *args): return _Xdmf.XdmfHeavyData_DoRead(self, *args)
    def DoWrite(self, *args): return _Xdmf.XdmfHeavyData_DoWrite(self, *args)
    def DoClose(self): return _Xdmf.XdmfHeavyData_DoClose(self)
    def setOpenCallback(self, *args): return _Xdmf.XdmfHeavyData_setOpenCallback(self, *args)
    def setReadCallback(self, *args): return _Xdmf.XdmfHeavyData_setReadCallback(self, *args)
    def setWriteCallback(self, *args): return _Xdmf.XdmfHeavyData_setWriteCallback(self, *args)
    def setCloseCallback(self, *args): return _Xdmf.XdmfHeavyData_setCloseCallback(self, *args)
XdmfHeavyData_swigregister = _Xdmf.XdmfHeavyData_swigregister
XdmfHeavyData_swigregister(XdmfHeavyData)

class XdmfOpenCallback(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfOpenCallback, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfOpenCallback, name)
    __repr__ = _swig_repr
    def DoOpen(self, *args): return _Xdmf.XdmfOpenCallback_DoOpen(self, *args)
    def __init__(self): 
        this = _Xdmf.new_XdmfOpenCallback()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfOpenCallback
    __del__ = lambda self : None;
XdmfOpenCallback_swigregister = _Xdmf.XdmfOpenCallback_swigregister
XdmfOpenCallback_swigregister(XdmfOpenCallback)

class XdmfReadCallback(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfReadCallback, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfReadCallback, name)
    __repr__ = _swig_repr
    def DoRead(self, *args): return _Xdmf.XdmfReadCallback_DoRead(self, *args)
    def __init__(self): 
        this = _Xdmf.new_XdmfReadCallback()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfReadCallback
    __del__ = lambda self : None;
XdmfReadCallback_swigregister = _Xdmf.XdmfReadCallback_swigregister
XdmfReadCallback_swigregister(XdmfReadCallback)

class XdmfWriteCallback(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfWriteCallback, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfWriteCallback, name)
    __repr__ = _swig_repr
    def DoWrite(self, *args): return _Xdmf.XdmfWriteCallback_DoWrite(self, *args)
    def __init__(self): 
        this = _Xdmf.new_XdmfWriteCallback()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfWriteCallback
    __del__ = lambda self : None;
XdmfWriteCallback_swigregister = _Xdmf.XdmfWriteCallback_swigregister
XdmfWriteCallback_swigregister(XdmfWriteCallback)

class XdmfCloseCallback(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfCloseCallback, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfCloseCallback, name)
    __repr__ = _swig_repr
    def DoClose(self, *args): return _Xdmf.XdmfCloseCallback_DoClose(self, *args)
    def __init__(self): 
        this = _Xdmf.new_XdmfCloseCallback()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfCloseCallback
    __del__ = lambda self : None;
XdmfCloseCallback_swigregister = _Xdmf.XdmfCloseCallback_swigregister
XdmfCloseCallback_swigregister(XdmfCloseCallback)

XDMF_H5_OTHER = _Xdmf.XDMF_H5_OTHER
class XdmfHDF(XdmfHeavyData):
    __swig_setmethods__ = {}
    for _s in [XdmfHeavyData]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfHDF, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfHeavyData]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfHDF, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfHDF()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfHDF
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfHDF_GetClassName(self)
    def SetCompression(self, *args): return _Xdmf.XdmfHDF_SetCompression(self, *args)
    def GetCompression(self): return _Xdmf.XdmfHDF_GetCompression(self)
    def SetUseSerialFile(self, *args): return _Xdmf.XdmfHDF_SetUseSerialFile(self, *args)
    def GetUseSerialFile(self): return _Xdmf.XdmfHDF_GetUseSerialFile(self)
    def SetCwdName(self, *args): return _Xdmf.XdmfHDF_SetCwdName(self, *args)
    def GetCwdName(self): return _Xdmf.XdmfHDF_GetCwdName(self)
    def Cd(self, Directory = "/"): return _Xdmf.XdmfHDF_Cd(self, Directory)
    def Mkdir(self, *args): return _Xdmf.XdmfHDF_Mkdir(self, *args)
    def GetNumberOfChildren(self): return _Xdmf.XdmfHDF_GetNumberOfChildren(self)
    def GetHDFVersion(self): return _Xdmf.XdmfHDF_GetHDFVersion(self)
    def GetChild(self, *args): return _Xdmf.XdmfHDF_GetChild(self, *args)
    def SetNextChild(self, *args): return _Xdmf.XdmfHDF_SetNextChild(self, *args)
    def Info(self, *args): return _Xdmf.XdmfHDF_Info(self, *args)
    def GetChildType(self, *args): return _Xdmf.XdmfHDF_GetChildType(self, *args)
    def GetChildTypeAsString(self, *args): return _Xdmf.XdmfHDF_GetChildTypeAsString(self, *args)
    def CreateDataset(self, Path = None): return _Xdmf.XdmfHDF_CreateDataset(self, Path)
    def OpenDataset(self): return _Xdmf.XdmfHDF_OpenDataset(self)
    def DoOpen(self, *args): return _Xdmf.XdmfHDF_DoOpen(self, *args)
    def DoRead(self, *args): return _Xdmf.XdmfHDF_DoRead(self, *args)
    def DoWrite(self, *args): return _Xdmf.XdmfHDF_DoWrite(self, *args)
    def DoClose(self): return _Xdmf.XdmfHDF_DoClose(self)
XdmfHDF_swigregister = _Xdmf.XdmfHDF_swigregister
XdmfHDF_swigregister(XdmfHDF)

class XdmfDomain(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDomain, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDomain, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfDomain()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfDomain
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfDomain_GetClassName(self)
    def UpdateInformation(self): return _Xdmf.XdmfDomain_UpdateInformation(self)
    def Insert(self, *args): return _Xdmf.XdmfDomain_Insert(self, *args)
    def Build(self): return _Xdmf.XdmfDomain_Build(self)
XdmfDomain_swigregister = _Xdmf.XdmfDomain_swigregister
XdmfDomain_swigregister(XdmfDomain)

def CopyArray(*args):
  return _Xdmf.CopyArray(*args)
CopyArray = _Xdmf.CopyArray

class XdmfRoot(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfRoot, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfRoot, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfRoot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfRoot
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfRoot_GetClassName(self)
    def UpdateInformation(self): return _Xdmf.XdmfRoot_UpdateInformation(self)
    def Insert(self, *args): return _Xdmf.XdmfRoot_Insert(self, *args)
    def SetVersion(self, *args): return _Xdmf.XdmfRoot_SetVersion(self, *args)
    def SetXInclude(self, *args): return _Xdmf.XdmfRoot_SetXInclude(self, *args)
    def Build(self): return _Xdmf.XdmfRoot_Build(self)
    def GetXInclude(self): return _Xdmf.XdmfRoot_GetXInclude(self)
    def GetVersion(self): return _Xdmf.XdmfRoot_GetVersion(self)
XdmfRoot_swigregister = _Xdmf.XdmfRoot_swigregister
XdmfRoot_swigregister(XdmfRoot)

XDMF_MAX_ORDER = _Xdmf.XDMF_MAX_ORDER
XDMF_STRUCTURED = _Xdmf.XDMF_STRUCTURED
XDMF_UNSTRUCTURED = _Xdmf.XDMF_UNSTRUCTURED
XDMF_NOTOPOLOGY = _Xdmf.XDMF_NOTOPOLOGY
XDMF_POLYVERTEX = _Xdmf.XDMF_POLYVERTEX
XDMF_POLYLINE = _Xdmf.XDMF_POLYLINE
XDMF_POLYGON = _Xdmf.XDMF_POLYGON
XDMF_TRI = _Xdmf.XDMF_TRI
XDMF_QUAD = _Xdmf.XDMF_QUAD
XDMF_TET = _Xdmf.XDMF_TET
XDMF_PYRAMID = _Xdmf.XDMF_PYRAMID
XDMF_WEDGE = _Xdmf.XDMF_WEDGE
XDMF_HEX = _Xdmf.XDMF_HEX
XDMF_EDGE_3 = _Xdmf.XDMF_EDGE_3
XDMF_TRI_6 = _Xdmf.XDMF_TRI_6
XDMF_QUAD_8 = _Xdmf.XDMF_QUAD_8
XDMF_QUAD_9 = _Xdmf.XDMF_QUAD_9
XDMF_TET_10 = _Xdmf.XDMF_TET_10
XDMF_PYRAMID_13 = _Xdmf.XDMF_PYRAMID_13
XDMF_WEDGE_15 = _Xdmf.XDMF_WEDGE_15
XDMF_HEX_20 = _Xdmf.XDMF_HEX_20
XDMF_MIXED = _Xdmf.XDMF_MIXED
XDMF_2DSMESH = _Xdmf.XDMF_2DSMESH
XDMF_2DRECTMESH = _Xdmf.XDMF_2DRECTMESH
XDMF_2DCORECTMESH = _Xdmf.XDMF_2DCORECTMESH
XDMF_3DSMESH = _Xdmf.XDMF_3DSMESH
XDMF_3DRECTMESH = _Xdmf.XDMF_3DRECTMESH
XDMF_3DCORECTMESH = _Xdmf.XDMF_3DCORECTMESH
class XdmfTopology(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfTopology, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfTopology, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfTopology()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfTopology
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfTopology_GetClassName(self)
    def Build(self): return _Xdmf.XdmfTopology_Build(self)
    def Insert(self, *args): return _Xdmf.XdmfTopology_Insert(self, *args)
    def GetClass(self): return _Xdmf.XdmfTopology_GetClass(self)
    def GetClassAsString(self): return _Xdmf.XdmfTopology_GetClassAsString(self)
    def SetTopologyType(self, *args): return _Xdmf.XdmfTopology_SetTopologyType(self, *args)
    def SetTopologyTypeFromString(self, *args): return _Xdmf.XdmfTopology_SetTopologyTypeFromString(self, *args)
    def GetTopologyType(self): return _Xdmf.XdmfTopology_GetTopologyType(self)
    def GetTopologyTypeAsString(self): return _Xdmf.XdmfTopology_GetTopologyTypeAsString(self)
    def GetOrder(self): return _Xdmf.XdmfTopology_GetOrder(self)
    def GetOrderAsString(self): return _Xdmf.XdmfTopology_GetOrderAsString(self)
    def SetOrderFromString(self, *args): return _Xdmf.XdmfTopology_SetOrderFromString(self, *args)
    def SetOrder(self, *args): return _Xdmf.XdmfTopology_SetOrder(self, *args)
    def SetLightDataLimit(self, *args): return _Xdmf.XdmfTopology_SetLightDataLimit(self, *args)
    def GetLightDataLimit(self): return _Xdmf.XdmfTopology_GetLightDataLimit(self)
    def SetNodesPerElement(self, *args): return _Xdmf.XdmfTopology_SetNodesPerElement(self, *args)
    def GetNodesPerElement(self): return _Xdmf.XdmfTopology_GetNodesPerElement(self)
    def SetBaseOffset(self, *args): return _Xdmf.XdmfTopology_SetBaseOffset(self, *args)
    def GetBaseOffset(self): return _Xdmf.XdmfTopology_GetBaseOffset(self)
    def GetShapeDesc(self): return _Xdmf.XdmfTopology_GetShapeDesc(self)
    def SetNumberOfElements(self, *args): return _Xdmf.XdmfTopology_SetNumberOfElements(self, *args)
    def GetNumberOfElements(self): return _Xdmf.XdmfTopology_GetNumberOfElements(self)
    def GetConnectivity(self, Array = None, Create = 1): return _Xdmf.XdmfTopology_GetConnectivity(self, Array, Create)
    def SetConnectivity(self, *args): return _Xdmf.XdmfTopology_SetConnectivity(self, *args)
    def GetCellOffsets(self, Array = None): return _Xdmf.XdmfTopology_GetCellOffsets(self, Array)
    def Update(self): return _Xdmf.XdmfTopology_Update(self)
    def UpdateInformation(self): return _Xdmf.XdmfTopology_UpdateInformation(self)
    def Release(self): return _Xdmf.XdmfTopology_Release(self)
XdmfTopology_swigregister = _Xdmf.XdmfTopology_swigregister
XdmfTopology_swigregister(XdmfTopology)


def HandleToXdmfTopology(*args):
  return _Xdmf.HandleToXdmfTopology(*args)
HandleToXdmfTopology = _Xdmf.HandleToXdmfTopology
XDMF_GEOMETRY_NONE = _Xdmf.XDMF_GEOMETRY_NONE
XDMF_GEOMETRY_XYZ = _Xdmf.XDMF_GEOMETRY_XYZ
XDMF_GEOMETRY_XY = _Xdmf.XDMF_GEOMETRY_XY
XDMF_GEOMETRY_X_Y_Z = _Xdmf.XDMF_GEOMETRY_X_Y_Z
XDMF_GEOMETRY_X_Y = _Xdmf.XDMF_GEOMETRY_X_Y
XDMF_GEOMETRY_VXVYVZ = _Xdmf.XDMF_GEOMETRY_VXVYVZ
XDMF_GEOMETRY_ORIGIN_DXDYDZ = _Xdmf.XDMF_GEOMETRY_ORIGIN_DXDYDZ
XDMF_GEOMETRY_VXVY = _Xdmf.XDMF_GEOMETRY_VXVY
XDMF_GEOMETRY_ORIGIN_DXDY = _Xdmf.XDMF_GEOMETRY_ORIGIN_DXDY
class XdmfGeometry(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfGeometry, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfGeometry, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfGeometry()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfGeometry
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfGeometry_GetClassName(self)
    def SetNumberOfPoints(self, *args): return _Xdmf.XdmfGeometry_SetNumberOfPoints(self, *args)
    def GetNumberOfPoints(self): return _Xdmf.XdmfGeometry_GetNumberOfPoints(self)
    def SetGeometryType(self, *args): return _Xdmf.XdmfGeometry_SetGeometryType(self, *args)
    def GetGeometryType(self): return _Xdmf.XdmfGeometry_GetGeometryType(self)
    def SetLightDataLimit(self, *args): return _Xdmf.XdmfGeometry_SetLightDataLimit(self, *args)
    def GetLightDataLimit(self): return _Xdmf.XdmfGeometry_GetLightDataLimit(self)
    def GetUnits(self): return _Xdmf.XdmfGeometry_GetUnits(self)
    def SetUnits(self, *args): return _Xdmf.XdmfGeometry_SetUnits(self, *args)
    def GetGeometryTypeAsString(self): return _Xdmf.XdmfGeometry_GetGeometryTypeAsString(self)
    def SetGeometryTypeFromString(self, *args): return _Xdmf.XdmfGeometry_SetGeometryTypeFromString(self, *args)
    def Build(self): return _Xdmf.XdmfGeometry_Build(self)
    def Insert(self, *args): return _Xdmf.XdmfGeometry_Insert(self, *args)
    def Update(self): return _Xdmf.XdmfGeometry_Update(self)
    def UpdateInformation(self): return _Xdmf.XdmfGeometry_UpdateInformation(self)
    def SetPoints(self, *args): return _Xdmf.XdmfGeometry_SetPoints(self, *args)
    def GetPoints(self, Create = 1): return _Xdmf.XdmfGeometry_GetPoints(self, Create)
    def Release(self): return _Xdmf.XdmfGeometry_Release(self)
    def GetOrigin(self): return _Xdmf.XdmfGeometry_GetOrigin(self)
    def GetOriginX(self): return _Xdmf.XdmfGeometry_GetOriginX(self)
    def GetOriginY(self): return _Xdmf.XdmfGeometry_GetOriginY(self)
    def GetOriginZ(self): return _Xdmf.XdmfGeometry_GetOriginZ(self)
    def SetOrigin(self, *args): return _Xdmf.XdmfGeometry_SetOrigin(self, *args)
    def SetDxDyDz(self, *args): return _Xdmf.XdmfGeometry_SetDxDyDz(self, *args)
    def GetDx(self): return _Xdmf.XdmfGeometry_GetDx(self)
    def GetDy(self): return _Xdmf.XdmfGeometry_GetDy(self)
    def GetDz(self): return _Xdmf.XdmfGeometry_GetDz(self)
    def GetDxDyDz(self): return _Xdmf.XdmfGeometry_GetDxDyDz(self)
    def GetVectorX(self): return _Xdmf.XdmfGeometry_GetVectorX(self)
    def GetVectorY(self): return _Xdmf.XdmfGeometry_GetVectorY(self)
    def GetVectorZ(self): return _Xdmf.XdmfGeometry_GetVectorZ(self)
    def SetVectorX(self, *args): return _Xdmf.XdmfGeometry_SetVectorX(self, *args)
    def SetVectorY(self, *args): return _Xdmf.XdmfGeometry_SetVectorY(self, *args)
    def SetVectorZ(self, *args): return _Xdmf.XdmfGeometry_SetVectorZ(self, *args)
    def HasData(self): return _Xdmf.XdmfGeometry_HasData(self)
XdmfGeometry_swigregister = _Xdmf.XdmfGeometry_swigregister
XdmfGeometry_swigregister(XdmfGeometry)


def GetXdmfGeometryHandle(*args):
  return _Xdmf.GetXdmfGeometryHandle(*args)
GetXdmfGeometryHandle = _Xdmf.GetXdmfGeometryHandle
XDMF_GRID_UNIFORM = _Xdmf.XDMF_GRID_UNIFORM
XDMF_GRID_COLLECTION = _Xdmf.XDMF_GRID_COLLECTION
XDMF_GRID_TREE = _Xdmf.XDMF_GRID_TREE
XDMF_GRID_SUBSET = _Xdmf.XDMF_GRID_SUBSET
XDMF_GRID_UNSET = _Xdmf.XDMF_GRID_UNSET
XDMF_GRID_MASK = _Xdmf.XDMF_GRID_MASK
XDMF_GRID_SECTION_ALL = _Xdmf.XDMF_GRID_SECTION_ALL
XDMF_GRID_SECTION_DATA_ITEM = _Xdmf.XDMF_GRID_SECTION_DATA_ITEM
XDMF_GRID_SECTION_MASK = _Xdmf.XDMF_GRID_SECTION_MASK
XDMF_GRID_COLLECTION_TEMPORAL = _Xdmf.XDMF_GRID_COLLECTION_TEMPORAL
XDMF_GRID_COLLECTION_SPATIAL = _Xdmf.XDMF_GRID_COLLECTION_SPATIAL
XDMF_GRID_COLLECTION_UNSET = _Xdmf.XDMF_GRID_COLLECTION_UNSET
class XdmfGrid(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfGrid, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfGrid, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfGrid()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfGrid
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfGrid_GetClassName(self)
    def SetGeometry(self, *args): return _Xdmf.XdmfGrid_SetGeometry(self, *args)
    def GetGeometry(self): return _Xdmf.XdmfGrid_GetGeometry(self)
    def SetTopology(self, *args): return _Xdmf.XdmfGrid_SetTopology(self, *args)
    def GetTopology(self): return _Xdmf.XdmfGrid_GetTopology(self)
    def SetTime(self, *args): return _Xdmf.XdmfGrid_SetTime(self, *args)
    def GetTime(self): return _Xdmf.XdmfGrid_GetTime(self)
    def GetGridTypeAsString(self): return _Xdmf.XdmfGrid_GetGridTypeAsString(self)
    def SetGridTypeFromString(self, *args): return _Xdmf.XdmfGrid_SetGridTypeFromString(self, *args)
    def GetCollectionTypeAsString(self): return _Xdmf.XdmfGrid_GetCollectionTypeAsString(self)
    def SetCollectionTypeFromString(self, *args): return _Xdmf.XdmfGrid_SetCollectionTypeFromString(self, *args)
    def Build(self): return _Xdmf.XdmfGrid_Build(self)
    def InsertTopology(self): return _Xdmf.XdmfGrid_InsertTopology(self)
    def InsertGeometry(self): return _Xdmf.XdmfGrid_InsertGeometry(self)
    def Insert(self, *args): return _Xdmf.XdmfGrid_Insert(self, *args)
    def GetGridType(self): return _Xdmf.XdmfGrid_GetGridType(self)
    def SetGridType(self, *args): return _Xdmf.XdmfGrid_SetGridType(self, *args)
    def GetCollectionType(self): return _Xdmf.XdmfGrid_GetCollectionType(self)
    def SetCollectionType(self, *args): return _Xdmf.XdmfGrid_SetCollectionType(self, *args)
    def GetBuildTime(self): return _Xdmf.XdmfGrid_GetBuildTime(self)
    def SetBuildTime(self, *args): return _Xdmf.XdmfGrid_SetBuildTime(self, *args)
    def Copy(self, *args): return _Xdmf.XdmfGrid_Copy(self, *args)
    def GetNumberOfChildren(self): return _Xdmf.XdmfGrid_GetNumberOfChildren(self)
    def SetNumberOfChildren(self, *args): return _Xdmf.XdmfGrid_SetNumberOfChildren(self, *args)
    def IsUniform(self): return _Xdmf.XdmfGrid_IsUniform(self)
    def GetNumberOfAttributes(self): return _Xdmf.XdmfGrid_GetNumberOfAttributes(self)
    def GetNumberOfSets(self): return _Xdmf.XdmfGrid_GetNumberOfSets(self)
    def GetNumberOfInformations(self): return _Xdmf.XdmfGrid_GetNumberOfInformations(self)
    def GetAttribute(self, *args): return _Xdmf.XdmfGrid_GetAttribute(self, *args)
    def GetSets(self, *args): return _Xdmf.XdmfGrid_GetSets(self, *args)
    def AssignAttribute(self, *args): return _Xdmf.XdmfGrid_AssignAttribute(self, *args)
    def AssignAttributeByIndex(self, *args): return _Xdmf.XdmfGrid_AssignAttributeByIndex(self, *args)
    def AssignAttributeByName(self, *args): return _Xdmf.XdmfGrid_AssignAttributeByName(self, *args)
    def GetAssignedAttribute(self): return _Xdmf.XdmfGrid_GetAssignedAttribute(self)
    def GetAssignedAttributeIndex(self): return _Xdmf.XdmfGrid_GetAssignedAttributeIndex(self)
    def UpdateInformation(self): return _Xdmf.XdmfGrid_UpdateInformation(self)
    def Update(self): return _Xdmf.XdmfGrid_Update(self)
    def GetChild(self, *args): return _Xdmf.XdmfGrid_GetChild(self, *args)
    def GetInformation(self, *args): return _Xdmf.XdmfGrid_GetInformation(self, *args)
    def FindGridsInTimeRange(self, *args): return _Xdmf.XdmfGrid_FindGridsInTimeRange(self, *args)
    def FindGridsAtTime(self, *args): return _Xdmf.XdmfGrid_FindGridsAtTime(self, *args)
    def Release(self): return _Xdmf.XdmfGrid_Release(self)
XdmfGrid_swigregister = _Xdmf.XdmfGrid_swigregister
XdmfGrid_swigregister(XdmfGrid)


def HandleToXdmfGrid(*args):
  return _Xdmf.HandleToXdmfGrid(*args)
HandleToXdmfGrid = _Xdmf.HandleToXdmfGrid
XDMF_TIME_SINGLE = _Xdmf.XDMF_TIME_SINGLE
XDMF_TIME_LIST = _Xdmf.XDMF_TIME_LIST
XDMF_TIME_HYPERSLAB = _Xdmf.XDMF_TIME_HYPERSLAB
XDMF_TIME_RANGE = _Xdmf.XDMF_TIME_RANGE
XDMF_TIME_FUNCTION = _Xdmf.XDMF_TIME_FUNCTION
XDMF_TIME_UNSET = _Xdmf.XDMF_TIME_UNSET
class XdmfTime(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfTime, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfTime, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfTime()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfTime
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfTime_GetClassName(self)
    def Insert(self, *args): return _Xdmf.XdmfTime_Insert(self, *args)
    def UpdateInformation(self): return _Xdmf.XdmfTime_UpdateInformation(self)
    def SetValue(self, *args): return _Xdmf.XdmfTime_SetValue(self, *args)
    def Build(self): return _Xdmf.XdmfTime_Build(self)
    def GetValue(self): return _Xdmf.XdmfTime_GetValue(self)
    def GetArray(self): return _Xdmf.XdmfTime_GetArray(self)
    def SetArray(self, *args): return _Xdmf.XdmfTime_SetArray(self, *args)
    def GetDataItem(self): return _Xdmf.XdmfTime_GetDataItem(self)
    def SetDataItem(self, *args): return _Xdmf.XdmfTime_SetDataItem(self, *args)
    def GetTimeType(self): return _Xdmf.XdmfTime_GetTimeType(self)
    def GetTimeTypeAsString(self): return _Xdmf.XdmfTime_GetTimeTypeAsString(self)
    def SetTimeType(self, *args): return _Xdmf.XdmfTime_SetTimeType(self, *args)
    def GetFunction(self): return _Xdmf.XdmfTime_GetFunction(self)
    def SetFunction(self, *args): return _Xdmf.XdmfTime_SetFunction(self, *args)
    def SetTimeFromParent(self, *args): return _Xdmf.XdmfTime_SetTimeFromParent(self, *args)
    def Evaluate(self, *args): return _Xdmf.XdmfTime_Evaluate(self, *args)
    def IsValid(self, *args): return _Xdmf.XdmfTime_IsValid(self, *args)
    def SetEpsilon(self, *args): return _Xdmf.XdmfTime_SetEpsilon(self, *args)
    def GetEpsilon(self): return _Xdmf.XdmfTime_GetEpsilon(self)
XdmfTime_swigregister = _Xdmf.XdmfTime_swigregister
XdmfTime_swigregister(XdmfTime)

XDMF_REGION_TYPE_UNSET = _Xdmf.XDMF_REGION_TYPE_UNSET
XDMF_REGION_TYPE_CELL = _Xdmf.XDMF_REGION_TYPE_CELL
XDMF_REGION_TYPE_FACE = _Xdmf.XDMF_REGION_TYPE_FACE
XDMF_REGION_TYPE_EDGE = _Xdmf.XDMF_REGION_TYPE_EDGE
XDMF_REGION_TYPE_NODE = _Xdmf.XDMF_REGION_TYPE_NODE
class XdmfRegion(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfRegion, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfRegion, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfRegion()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfRegion
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfRegion_GetClassName(self)
    def SetRegionTypeFromString(self, *args): return _Xdmf.XdmfRegion_SetRegionTypeFromString(self, *args)
    def GetRegionTypeAsString(self): return _Xdmf.XdmfRegion_GetRegionTypeAsString(self)
    def SetRegionType(self, *args): return _Xdmf.XdmfRegion_SetRegionType(self, *args)
    def GetRegionType(self): return _Xdmf.XdmfRegion_GetRegionType(self)
    def GetShapeDesc(self): return _Xdmf.XdmfRegion_GetShapeDesc(self)
    def Insert(self, *args): return _Xdmf.XdmfRegion_Insert(self, *args)
    def SetValues(self, *args): return _Xdmf.XdmfRegion_SetValues(self, *args)
    def GetValues(self, Create = 1): return _Xdmf.XdmfRegion_GetValues(self, Create)
    def UpdateInformation(self): return _Xdmf.XdmfRegion_UpdateInformation(self)
    def Update(self): return _Xdmf.XdmfRegion_Update(self)
    def Build(self): return _Xdmf.XdmfRegion_Build(self)
    def Release(self): return _Xdmf.XdmfRegion_Release(self)
XdmfRegion_swigregister = _Xdmf.XdmfRegion_swigregister
XdmfRegion_swigregister(XdmfRegion)

XDMF_SET_MAX_ORDER = _Xdmf.XDMF_SET_MAX_ORDER
XDMF_SET_TYPE_UNSET = _Xdmf.XDMF_SET_TYPE_UNSET
XDMF_SET_TYPE_NODE = _Xdmf.XDMF_SET_TYPE_NODE
XDMF_SET_TYPE_CELL = _Xdmf.XDMF_SET_TYPE_CELL
XDMF_SET_TYPE_FACE = _Xdmf.XDMF_SET_TYPE_FACE
XDMF_SET_TYPE_EDGE = _Xdmf.XDMF_SET_TYPE_EDGE
class XdmfSet(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfSet, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfSet, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfSet()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfSet
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfSet_GetClassName(self)
    def SetSetTypeFromString(self, *args): return _Xdmf.XdmfSet_SetSetTypeFromString(self, *args)
    def GetSetTypeAsString(self): return _Xdmf.XdmfSet_GetSetTypeAsString(self)
    def SetSetType(self, *args): return _Xdmf.XdmfSet_SetSetType(self, *args)
    def GetSetType(self): return _Xdmf.XdmfSet_GetSetType(self)
    def GetSize(self): return _Xdmf.XdmfSet_GetSize(self)
    def SetSize(self, *args): return _Xdmf.XdmfSet_SetSize(self, *args)
    def GetGhost(self): return _Xdmf.XdmfSet_GetGhost(self)
    def SetGhost(self, *args): return _Xdmf.XdmfSet_SetGhost(self, *args)
    def GetShapeDesc(self): return _Xdmf.XdmfSet_GetShapeDesc(self)
    def Insert(self, *args): return _Xdmf.XdmfSet_Insert(self, *args)
    def SetIds(self, *args): return _Xdmf.XdmfSet_SetIds(self, *args)
    def GetIds(self, Create = 1): return _Xdmf.XdmfSet_GetIds(self, Create)
    def SetCellIds(self, *args): return _Xdmf.XdmfSet_SetCellIds(self, *args)
    def GetCellIds(self, Create = 1): return _Xdmf.XdmfSet_GetCellIds(self, Create)
    def SetFaceIds(self, *args): return _Xdmf.XdmfSet_SetFaceIds(self, *args)
    def GetFaceIds(self, Create = 1): return _Xdmf.XdmfSet_GetFaceIds(self, Create)
    def GetNumberOfMaps(self): return _Xdmf.XdmfSet_GetNumberOfMaps(self)
    def GetMap(self, *args): return _Xdmf.XdmfSet_GetMap(self, *args)
    def GetNumberOfAttributes(self): return _Xdmf.XdmfSet_GetNumberOfAttributes(self)
    def GetAttribute(self, *args): return _Xdmf.XdmfSet_GetAttribute(self, *args)
    def UpdateInformation(self): return _Xdmf.XdmfSet_UpdateInformation(self)
    def Update(self): return _Xdmf.XdmfSet_Update(self)
    def Build(self): return _Xdmf.XdmfSet_Build(self)
    def Release(self): return _Xdmf.XdmfSet_Release(self)
XdmfSet_swigregister = _Xdmf.XdmfSet_swigregister
XdmfSet_swigregister(XdmfSet)

XDMF_MAP_MAX_ORDER = _Xdmf.XDMF_MAP_MAX_ORDER
XDMF_MAP_TYPE_UNSET = _Xdmf.XDMF_MAP_TYPE_UNSET
XDMF_MAP_TYPE_NODE = _Xdmf.XDMF_MAP_TYPE_NODE
XDMF_MAP_TYPE_CELL = _Xdmf.XDMF_MAP_TYPE_CELL
XDMF_MAP_TYPE_FACE = _Xdmf.XDMF_MAP_TYPE_FACE
XDMF_MAP_TYPE_EDGE = _Xdmf.XDMF_MAP_TYPE_EDGE
class XdmfMap(XdmfElement):
    __swig_setmethods__ = {}
    for _s in [XdmfElement]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfMap, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfElement]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfMap, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfMap()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfMap
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfMap_GetClassName(self)
    def SetMapTypeFromString(self, *args): return _Xdmf.XdmfMap_SetMapTypeFromString(self, *args)
    def GetMapTypeAsString(self): return _Xdmf.XdmfMap_GetMapTypeAsString(self)
    def SetMapType(self, *args): return _Xdmf.XdmfMap_SetMapType(self, *args)
    def GetMapType(self): return _Xdmf.XdmfMap_GetMapType(self)
    def GetItemLength(self): return _Xdmf.XdmfMap_GetItemLength(self)
    def SetItemLength(self, *args): return _Xdmf.XdmfMap_SetItemLength(self, *args)
    def GetMapLength(self): return _Xdmf.XdmfMap_GetMapLength(self)
    def SetMapLength(self, *args): return _Xdmf.XdmfMap_SetMapLength(self, *args)
    def Insert(self, *args): return _Xdmf.XdmfMap_Insert(self, *args)
    def SetIds(self, *args): return _Xdmf.XdmfMap_SetIds(self, *args)
    def GetIds(self, Create = 1): return _Xdmf.XdmfMap_GetIds(self, Create)
    def SetMapIndex(self, *args): return _Xdmf.XdmfMap_SetMapIndex(self, *args)
    def GetMapIndex(self, Create = 1): return _Xdmf.XdmfMap_GetMapIndex(self, Create)
    def SetMapData(self, *args): return _Xdmf.XdmfMap_SetMapData(self, *args)
    def GetMapData(self, Create = 1): return _Xdmf.XdmfMap_GetMapData(self, Create)
    def UpdateInformation(self): return _Xdmf.XdmfMap_UpdateInformation(self)
    def Update(self): return _Xdmf.XdmfMap_Update(self)
    def Build(self): return _Xdmf.XdmfMap_Build(self)
    def Release(self): return _Xdmf.XdmfMap_Release(self)
XdmfMap_swigregister = _Xdmf.XdmfMap_swigregister
XdmfMap_swigregister(XdmfMap)

XDMF_DSM_OPCODE_DONE = _Xdmf.XDMF_DSM_OPCODE_DONE
XDMF_DSM_TYPE_UNIFORM = _Xdmf.XDMF_DSM_TYPE_UNIFORM
XDMF_DSM_TYPE_UNIFORM_RANGE = _Xdmf.XDMF_DSM_TYPE_UNIFORM_RANGE
XDMF_DSM_TYPE_MIXED = _Xdmf.XDMF_DSM_TYPE_MIXED
XDMF_DSM_DEFAULT_LENGTH = _Xdmf.XDMF_DSM_DEFAULT_LENGTH
class XdmfDsm(XdmfObject):
    __swig_setmethods__ = {}
    for _s in [XdmfObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDsm, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDsm, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfDsm()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfDsm
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfDsm_GetClassName(self)
    def GetDsmType(self): return _Xdmf.XdmfDsm_GetDsmType(self)
    def SetDsmType(self, *args): return _Xdmf.XdmfDsm_SetDsmType(self, *args)
    def GetEndAddress(self): return _Xdmf.XdmfDsm_GetEndAddress(self)
    def SetEndAddress(self, *args): return _Xdmf.XdmfDsm_SetEndAddress(self, *args)
    def GetStartAddress(self): return _Xdmf.XdmfDsm_GetStartAddress(self)
    def SetStartAddress(self, *args): return _Xdmf.XdmfDsm_SetStartAddress(self, *args)
    def GetStartServerId(self): return _Xdmf.XdmfDsm_GetStartServerId(self)
    def SetStartServerId(self, *args): return _Xdmf.XdmfDsm_SetStartServerId(self, *args)
    def GetEndServerId(self): return _Xdmf.XdmfDsm_GetEndServerId(self)
    def SetEndServerId(self, *args): return _Xdmf.XdmfDsm_SetEndServerId(self, *args)
    def GetLength(self): return _Xdmf.XdmfDsm_GetLength(self)
    def SetLength(self, *args): return _Xdmf.XdmfDsm_SetLength(self, *args)
    def GetTotalLength(self): return _Xdmf.XdmfDsm_GetTotalLength(self)
    def SetTotalLength(self, *args): return _Xdmf.XdmfDsm_SetTotalLength(self, *args)
    def GetStorage(self): return _Xdmf.XdmfDsm_GetStorage(self)
    def SetStorage(self, *args): return _Xdmf.XdmfDsm_SetStorage(self, *args)
    def GetComm(self): return _Xdmf.XdmfDsm_GetComm(self)
    def SetComm(self, *args): return _Xdmf.XdmfDsm_SetComm(self, *args)
    def GetMsg(self): return _Xdmf.XdmfDsm_GetMsg(self)
    def SetMsg(self, *args): return _Xdmf.XdmfDsm_SetMsg(self, *args)
    def GetAddressRangeForId(self, *args): return _Xdmf.XdmfDsm_GetAddressRangeForId(self, *args)
    def ConfigureUniform(self, *args): return _Xdmf.XdmfDsm_ConfigureUniform(self, *args)
    def AddressToId(self, *args): return _Xdmf.XdmfDsm_AddressToId(self, *args)
    def SendCommandHeader(self, *args): return _Xdmf.XdmfDsm_SendCommandHeader(self, *args)
    def ReceiveCommandHeader(self, *args): return _Xdmf.XdmfDsm_ReceiveCommandHeader(self, *args)
    def SendData(self, *args): return _Xdmf.XdmfDsm_SendData(self, *args)
    def ReceiveData(self, *args): return _Xdmf.XdmfDsm_ReceiveData(self, *args)
    def Copy(self, *args): return _Xdmf.XdmfDsm_Copy(self, *args)
    def SendDone(self): return _Xdmf.XdmfDsm_SendDone(self)
XdmfDsm_swigregister = _Xdmf.XdmfDsm_swigregister
XdmfDsm_swigregister(XdmfDsm)

XDMF_DSM_DEFAULT_TAG = _Xdmf.XDMF_DSM_DEFAULT_TAG
XDMF_DSM_COMMAND_TAG = _Xdmf.XDMF_DSM_COMMAND_TAG
XDMF_DSM_RESPONSE_TAG = _Xdmf.XDMF_DSM_RESPONSE_TAG
XDMF_DSM_ANY_SOURCE = _Xdmf.XDMF_DSM_ANY_SOURCE
class XdmfDsmMsg(XdmfObject):
    __swig_setmethods__ = {}
    for _s in [XdmfObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDsmMsg, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDsmMsg, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfDsmMsg()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfDsmMsg
    __del__ = lambda self : None;
    def SetSource(self, *args): return _Xdmf.XdmfDsmMsg_SetSource(self, *args)
    def GetSource(self): return _Xdmf.XdmfDsmMsg_GetSource(self)
    def SetDest(self, *args): return _Xdmf.XdmfDsmMsg_SetDest(self, *args)
    def GetDest(self): return _Xdmf.XdmfDsmMsg_GetDest(self)
    def SetTag(self, *args): return _Xdmf.XdmfDsmMsg_SetTag(self, *args)
    def GetTag(self): return _Xdmf.XdmfDsmMsg_GetTag(self)
    def SetLength(self, *args): return _Xdmf.XdmfDsmMsg_SetLength(self, *args)
    def GetLength(self): return _Xdmf.XdmfDsmMsg_GetLength(self)
    def SetData(self, *args): return _Xdmf.XdmfDsmMsg_SetData(self, *args)
    def GetData(self): return _Xdmf.XdmfDsmMsg_GetData(self)
    __swig_setmethods__["Source"] = _Xdmf.XdmfDsmMsg_Source_set
    __swig_getmethods__["Source"] = _Xdmf.XdmfDsmMsg_Source_get
    if _newclass:Source = _swig_property(_Xdmf.XdmfDsmMsg_Source_get, _Xdmf.XdmfDsmMsg_Source_set)
    __swig_setmethods__["Dest"] = _Xdmf.XdmfDsmMsg_Dest_set
    __swig_getmethods__["Dest"] = _Xdmf.XdmfDsmMsg_Dest_get
    if _newclass:Dest = _swig_property(_Xdmf.XdmfDsmMsg_Dest_get, _Xdmf.XdmfDsmMsg_Dest_set)
    __swig_setmethods__["Tag"] = _Xdmf.XdmfDsmMsg_Tag_set
    __swig_getmethods__["Tag"] = _Xdmf.XdmfDsmMsg_Tag_get
    if _newclass:Tag = _swig_property(_Xdmf.XdmfDsmMsg_Tag_get, _Xdmf.XdmfDsmMsg_Tag_set)
    __swig_setmethods__["Length"] = _Xdmf.XdmfDsmMsg_Length_set
    __swig_getmethods__["Length"] = _Xdmf.XdmfDsmMsg_Length_get
    if _newclass:Length = _swig_property(_Xdmf.XdmfDsmMsg_Length_get, _Xdmf.XdmfDsmMsg_Length_set)
    __swig_setmethods__["Data"] = _Xdmf.XdmfDsmMsg_Data_set
    __swig_getmethods__["Data"] = _Xdmf.XdmfDsmMsg_Data_get
    if _newclass:Data = _swig_property(_Xdmf.XdmfDsmMsg_Data_get, _Xdmf.XdmfDsmMsg_Data_set)
XdmfDsmMsg_swigregister = _Xdmf.XdmfDsmMsg_swigregister
XdmfDsmMsg_swigregister(XdmfDsmMsg)

XDMF_DSM_MAX_LOCKS = _Xdmf.XDMF_DSM_MAX_LOCKS

def XdmfDsmBufferServiceThread(*args):
  return _Xdmf.XdmfDsmBufferServiceThread(*args)
XdmfDsmBufferServiceThread = _Xdmf.XdmfDsmBufferServiceThread
class XdmfDsmBuffer(XdmfDsm):
    __swig_setmethods__ = {}
    for _s in [XdmfDsm]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDsmBuffer, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfDsm]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDsmBuffer, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfDsmBuffer()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfDsmBuffer
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfDsmBuffer_GetClassName(self)
    def GetThreadDsmReady(self): return _Xdmf.XdmfDsmBuffer_GetThreadDsmReady(self)
    def SetThreadDsmReady(self, *args): return _Xdmf.XdmfDsmBuffer_SetThreadDsmReady(self, *args)
    def Put(self, *args): return _Xdmf.XdmfDsmBuffer_Put(self, *args)
    def Get(self, *args): return _Xdmf.XdmfDsmBuffer_Get(self, *args)
    def Aquire(self, *args): return _Xdmf.XdmfDsmBuffer_Aquire(self, *args)
    def Release(self, *args): return _Xdmf.XdmfDsmBuffer_Release(self, *args)
    def ServiceInit(self): return _Xdmf.XdmfDsmBuffer_ServiceInit(self)
    def ServiceOnce(self, ReturnOpcode = None): return _Xdmf.XdmfDsmBuffer_ServiceOnce(self, ReturnOpcode)
    def ServiceUntilIdle(self, ReturnOpcode = None): return _Xdmf.XdmfDsmBuffer_ServiceUntilIdle(self, ReturnOpcode)
    def ServiceLoop(self, ReturnOpcode = None): return _Xdmf.XdmfDsmBuffer_ServiceLoop(self, ReturnOpcode)
    def Service(self, ReturnOpcode = None): return _Xdmf.XdmfDsmBuffer_Service(self, ReturnOpcode)
    def ServiceThread(self): return _Xdmf.XdmfDsmBuffer_ServiceThread(self)
XdmfDsmBuffer_swigregister = _Xdmf.XdmfDsmBuffer_swigregister
XdmfDsmBuffer_swigregister(XdmfDsmBuffer)

class XdmfDsmComm(XdmfObject):
    __swig_setmethods__ = {}
    for _s in [XdmfObject]: __swig_setmethods__.update(getattr(_s,'__swig_setmethods__',{}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, XdmfDsmComm, name, value)
    __swig_getmethods__ = {}
    for _s in [XdmfObject]: __swig_getmethods__.update(getattr(_s,'__swig_getmethods__',{}))
    __getattr__ = lambda self, name: _swig_getattr(self, XdmfDsmComm, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _Xdmf.new_XdmfDsmComm()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _Xdmf.delete_XdmfDsmComm
    __del__ = lambda self : None;
    def GetClassName(self): return _Xdmf.XdmfDsmComm_GetClassName(self)
    def GetId(self): return _Xdmf.XdmfDsmComm_GetId(self)
    def SetId(self, *args): return _Xdmf.XdmfDsmComm_SetId(self, *args)
    def GetTotalSize(self): return _Xdmf.XdmfDsmComm_GetTotalSize(self)
    def SetTotalSize(self, *args): return _Xdmf.XdmfDsmComm_SetTotalSize(self, *args)
    def Init(self): return _Xdmf.XdmfDsmComm_Init(self)
    def Send(self, *args): return _Xdmf.XdmfDsmComm_Send(self, *args)
    def Receive(self, *args): return _Xdmf.XdmfDsmComm_Receive(self, *args)
    def Check(self, *args): return _Xdmf.XdmfDsmComm_Check(self, *args)
    def Barrier(self): return _Xdmf.XdmfDsmComm_Barrier(self)
XdmfDsmComm_swigregister = _Xdmf.XdmfDsmComm_swigregister
XdmfDsmComm_swigregister(XdmfDsmComm)



