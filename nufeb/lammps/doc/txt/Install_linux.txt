"Higher level section"_Install.html - "LAMMPS WWW Site"_lws - "LAMMPS
Documentation"_ld - "LAMMPS Commands"_lc :c

:link(lws,http://lammps.sandia.gov)
:link(ld,Manual.html)
:link(lc,Commands_all.html)

:line

Download an executable for Linux :h3

Binaries are available for different versions of Linux:

"Pre-built Ubuntu Linux executables"_#ubuntu
"Pre-built Fedora Linux executables"_#fedora
"Pre-built EPEL Linux executables (RHEL, CentOS)"_#epel
"Pre-built OpenSuse Linux executables"_#opensuse
"Gentoo Linux executable"_#gentoo
"Arch Linux build-script"_#arch :all(b)

:line

Pre-built Ubuntu Linux executables :h4,link(ubuntu)

A pre-built LAMMPS executable suitable for running on the latest
Ubuntu Linux versions, can be downloaded as a Debian package.  This
allows you to install LAMMPS with a single command, and stay
up-to-date with the current version of LAMMPS by simply updating your
operating system.

To install the appropriate personal-package archive (PPA), do the
following once:

sudo add-apt-repository ppa:gladky-anton/lammps
sudo apt-get update :pre

To install LAMMPS do the following once:

sudo apt-get install lammps-daily :pre

This downloads an executable named "lmp_daily" to your box, which
can then be used in the usual way to run input scripts:

lmp_daily -in in.lj :pre

To update LAMMPS to the most current version, do the following:

sudo apt-get update :pre

which will also update other packages on your system.

To get a copy of the current documentation and examples:

sudo apt-get install lammps-daily-doc :pre

which will download the doc files in
/usr/share/doc/lammps-daily-doc/doc and example problems in
/usr/share/doc/lammps-doc/examples.

Note that you may still wish to download the tarball to get potential
files and auxiliary tools.

To un-install LAMMPS, do the following:

sudo apt-get remove lammps-daily :pre

Note that the lammps-daily executable is built with the following
sequence of make commands, as if you had done the same with the
unpacked tarball files in the src directory:

make yes-all; make no-lib; make openmpi

Thus it builds with FFTW3 and OpenMPI.

Thanks to Anton Gladky (gladky.anton at gmail.com) for setting up this
Ubuntu package capability.

:line

Pre-built Fedora Linux executables :h4,link(fedora)

Pre-built LAMMPS packages for stable releases are available
in the Fedora Linux distribution as of version 28. The packages
can be installed via the dnf package manager. There are 3 basic
varieties (lammps = no MPI, lammps-mpich = MPICH MPI library,
lammps-openmpi = OpenMPI MPI library) and for each support for
linking to the C library interface (lammps-devel, lammps-mpich-devel,
lammps-openmpi-devel), the header for compiling programs using
the C library interface (lammps-headers), and the LAMMPS python
module for Python 3. All packages can be installed at the same
time and the name of the LAMMPS executable is {lmp} and {lmp_openmpi}
or {lmp_mpich} respectively.  By default, {lmp} will refer to the
serial executable, unless one of the MPI environment modules is loaded
("module load mpi/mpich-x86_64" or "module load mpi/openmpi-x86_64").
Then the corresponding parallel LAMMPS executable can be used.
The same mechanism applies when loading the LAMMPS python module.

To install LAMMPS with OpenMPI and run an input in.lj with 2 CPUs do:

dnf install lammps-openmpi
module load mpi/openmpi-x86_64
mpirun -np 2 lmp -in in.lj :pre

The "dnf install" command is needed only once. In case of a new LAMMPS
stable release, "dnf update" will automatically update to the newer
version as soon at the RPM files are built and uploaded to the download
mirrors. The "module load" command is needed once per (shell) session
or shell terminal instance, unless it is automatically loaded from the
shell profile.

Please use "lmp -help" to see which compilation options, packages,
and styles are included in the binary.

Thanks to Christoph Junghans (LANL) for making LAMMPS available in Fedora.

:line

Pre-built EPEL Linux executable :h4,link(epel)

Pre-built LAMMPS packages for stable releases are available
in the "Extra Packages for Enterprise Linux (EPEL) repository"_https://fedoraproject.org/wiki/EPEL
for use with Red Hat Enterprise Linux (RHEL) or CentOS version 7.x
and compatible Linux distributions. Names of packages, executable,
and content are the same as described above for Fedora Linux.
But RHEL/CentOS 7.x uses the "yum" package manager instead of "dnf"
in Fedora 28.

Please use "lmp -help" to see which compilation options, packages,
and styles are included in the binary.

Thanks to Christoph Junghans (LANL) for making LAMMPS available in EPEL.

:line

Pre-built OpenSuse Linux executable :h4,link(opensuse)

A pre-built LAMMPS package for stable releases is available
in OpenSuse as of Leap 15.0. You can install the package with:

zypper install lammps :pre

This includes support for OpenMPI. The name of the LAMMPS executable
is {lmp}. Thus to run an input in parallel on 2 CPUs you would do:

mpirun -np 2 lmp -in in.lj :pre

Please use "lmp -help" to see which compilation options, packages,
and styles are included in the binary.

Thanks to Christoph Junghans (LANL) for making LAMMPS available in OpenSuse.

:line

Gentoo Linux executable :h4,link(gentoo)

LAMMPS is part of Gentoo's main package tree and can be installed by
typing:

% emerge --ask lammps :pre

Note that in Gentoo the LAMMPS source is downloaded and the package is
built on the your machine.

Certain LAMMPS packages can be enable via USE flags, type

% equery uses lammps :pre

for details.

Thanks to Nicolas Bock and Christoph Junghans (LANL) for setting up
this Gentoo capability.

:line

Archlinux build-script :h4,link(arch)

LAMMPS is available via Arch's unofficial Arch User repository (AUR).

There are three scripts available, named lammps, lammps-beta and lammps-git.
They respectively package the stable, patch and git releases.

To install, you will need to have the git package installed. You may use
any of the above names in-place of lammps.

$ git clone https://aur.archlinux.org/lammps.git :pre
$ cd lammps :pre
$ makepkg -s :pre
# makepkg -i :pre

To update, you may repeat the above, or change into the cloned directory,
and execute the following, after which, if there are any changes, you may
use makepkg as above.

$ git pull :pre

Alternatively, you may use an AUR helper to install these packages.

Note that the AUR provides build-scripts that download the source and
the build the package on your machine.
