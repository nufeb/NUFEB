################ NUFEB simulation - Monospecies biofilm growth ################

##############System setting##############
## use SI unit
units si

##use bio atom style to model microbe##
atom_style	bio

##modify attributes of atoms defined and stored in NUFEB##
atom_modify	map array sort 100 5.0e-7

##define style of domain boundary: x->periodic; y->periodic; z->fix##
boundary	pp pp ff

##turn off Newton's 3rd law##
newton		off

##define domain partition for parallel simulation##
processors  * * 1

##further setting for parallelisation - do not exchange velocity info with ghost atoms##
comm_modify	vel yes

##read initial settings of domain, atoms, species and nutrients from atom.in file##
read_data_bio atom.in

##############Define initial particle distribution##############
## define a region for placing initial particles ##
lattice sc 1e-6 origin 0 0 0
region reg block 0 50 0 40 0 1

## randomly place 40 initial particles in the region
create_atoms 1 random 40 6534 reg

## set parameters
set type 1 density 150
set type 1 diameter 1e-6
set type 1 mass 7.854e-17

##set group for each species defined in atom.in file##
group HET type 1
group EPS type 2

##set neighbor cut-off distance##
neighbor	5e-7 bin

##additional parameters that affect the building and use of neighbor list##
neigh_modify	delay 0 one 5000

##############Define mechanical processes##############

##simulation timestep: 10sec##
timestep 10

##contact force##
pair_style  gran/hooke/history 1.e-4 NULL 1.e-5 NULL 0.0 1
pair_coeff  * *

##constant NVE updates of position and velocity of atoms##
fix 1 all nve/limit 1e-8

##viscous force##
fix fv all viscous 1e-5

##contact force from domain boundary##
fix zw all wall/gran hooke/history 2000 NULL 500.0 NULL 1.5 0 zplane  0.0  1e-04

##adhesive force from domain boundary##
variable kanc equal 50
fix zwa all walladh v_kanc zplane  0.0  1e-04

##EPS adhesive force##
variable ke equal 5e+10
fix j1 all epsadh 1 v_ke 1

##############Variables used in bio and chemical processes##############

##variables used in fix eps_extract: EPS density; EPS_shell/HET ratio##
variable EPSdens equal 30
variable EPSratio equal 1.3

##variables used in fix division: maximum microbe diameter##
variable divDia equal 1.36e-6

##variables used in fix kinetics: diffusion timestep; diffusion toleranace value; height of boundary layer##
variable diffT equal 1e-4
variable tol equal 1e-6
variable layer equal -1

##variables used in fix death: minimum microbe diameter##
variable deadDia equal 9e-7

##############Define biological and chemical processes##############

##parameters for chemical processes: timestep to update nutrient concentration(100x10sec); diffusion mesh (10x8x10); maximum # of iteraction for solving chemical processes (niter 10000)##
fix k1 all kinetics 100 10 8 10 v_diffT v_layer niter 10000

##Monod based microbe growth process##
fix kgm all kinetics/growth/monod epsdens 30

##diffusion-reaction process, dcflag: diffusion coefficent in biomass 0=fixed, 1=dynamic, 2=0.8 of liquid##
fix g1 all kinetics/diffusion v_tol dcflag 2

##microbe division process: timestep (100x10sec)##
fix d1 all divide 100 v_EPSdens v_divDia 64564

##EPS production process: timestep (100x10sec)##
fix e1 HET eps_extract 100 v_EPSratio v_EPSdens 53453

##############Define IBm Computes##############

##compute # of atoms of each type (species)##
compute myNtypes all ntypes

##compute biofilm average height##
compute myHeight all avg_height

##compute biofilm surface roughness##
compute myRough all roughness

##compute total biomass of each type##
compute myMass all biomass

##compute average concentration of each nutrient##
compute myCon all avg_con

##############Simulation Output##############

##output atom states (id, species, diameter, position) every 1000x10sec in lammps default format##
dump		id all custom 1000 output.lammps id type diameter x y z

##output atom states (id, species, diameter, position) every 1000x10sec in vtk format##
dump		du1 all vtk 1000 atom_*.vtu id type diameter x y z

##output field state (concentration) every 1000x10sec in vtk format##
dump		du2 all grid 1000 grid_%_*.vti con

##output system properties every 100x10sec to \Result dirctory
dump            du3 all bio 1000 avg_height roughness biomass ntypes avg_con

##output system state in hdf5 format
dump            du4 all bio/hdf5 1000 dump.h5 id type x y z vx vy vz fx fy fz radius con upt yie

##screen output: current timestep; cpu time, # of atoms, # of atoms of HET and EPS, total biomass of HET and EPS, average concentration of sub and o2##
thermo_style    custom step cpu atoms c_myNtypes[*] c_myMass[*] c_myCon[*]

##screent output every 100x10sec##
thermo		100

##ignore atom lost##
thermo_modify	lost ignore

##run simulation for 40,000 steps (40000x10sec)##
run 40000


